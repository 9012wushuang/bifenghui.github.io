[{"title":"设计模式-桥接模式","slug":"设计模式-桥接模式","date":"2017-03-24T04:37:37.000Z","updated":"2017-03-24T04:58:56.000Z","comments":true,"path":"2017/03/24/设计模式-桥接模式/","link":"","permalink":"https://bifenghui.github.io/2017/03/24/设计模式-桥接模式/","excerpt":"设计模式桥接模式意图将抽象部分与实现部分分离，使它们都可以独立的变化。 主要解决在有多种可能会变化的情况下，用继承会造成类爆炸问题，扩展起来不灵活。 何时使用实现系统可能有多个角度分类，每一种角度都可能变化。 如何解决把这种多角度分类分离出来，让它们独立变化，减少它们之间耦合。 关键代码抽象类依赖实现类。","text":"设计模式桥接模式意图将抽象部分与实现部分分离，使它们都可以独立的变化。 主要解决在有多种可能会变化的情况下，用继承会造成类爆炸问题，扩展起来不灵活。 何时使用实现系统可能有多个角度分类，每一种角度都可能变化。 如何解决把这种多角度分类分离出来，让它们独立变化，减少它们之间耦合。 关键代码抽象类依赖实现类。 优点 抽象和实现的分离 优秀的扩展能力 实现细节对客户透明缺点桥接模式的引入会增加系统的理解与设计难度，由于聚合关联关系建立在抽象层，要求开发者针对抽象进行设计与编程。####使用场景1、如果一个系统需要在构件的抽象化角色和具体化角色之间增加更多的灵活性，避免在两个层次之间建立静态的继承联系，通过桥接模式可以使它们在抽象层建立一个关联关系。2、对于那些不希望使用继承或因为多层次继承导致系统类的个数急剧增加的系统，桥接模式尤为适用。3、一个类存在两个独立变化的维度，且这两个维度都需要进行扩展。注意事项对于两个独立变化的维度，使用桥接模式再适合不过了。code：1、桥接实现接口2、具体实现桥接接口的实现类3、关联关系的抽象类4、继承了抽象类的实体类5、使用抽象类和桥接实现接口6、验证输出","categories":[{"name":"设计模式","slug":"设计模式","permalink":"https://bifenghui.github.io/categories/设计模式/"}],"tags":[{"name":"桥接模式","slug":"桥接模式","permalink":"https://bifenghui.github.io/tags/桥接模式/"}]},{"title":"设计模式-责任链模式","slug":"设计模式-责任链模式","date":"2017-03-23T04:36:57.000Z","updated":"2017-03-23T04:36:57.000Z","comments":true,"path":"2017/03/23/设计模式-责任链模式/","link":"","permalink":"https://bifenghui.github.io/2017/03/23/设计模式-责任链模式/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"设计模式-策略模式","slug":"设计模式-策略模式","date":"2017-03-23T04:36:46.000Z","updated":"2017-03-23T04:36:46.000Z","comments":true,"path":"2017/03/23/设计模式-策略模式/","link":"","permalink":"https://bifenghui.github.io/2017/03/23/设计模式-策略模式/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"设计模式-工厂模式","slug":"设计模式-工厂模式","date":"2017-03-23T04:34:22.000Z","updated":"2017-03-23T04:34:22.000Z","comments":true,"path":"2017/03/23/设计模式-工厂模式/","link":"","permalink":"https://bifenghui.github.io/2017/03/23/设计模式-工厂模式/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"设计模式-装饰模式","slug":"设计模式-装饰模式","date":"2017-03-23T04:34:17.000Z","updated":"2017-03-23T04:34:17.000Z","comments":true,"path":"2017/03/23/设计模式-装饰模式/","link":"","permalink":"https://bifenghui.github.io/2017/03/23/设计模式-装饰模式/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"设计模式-适配器模式","slug":"设计模式-适配器模式","date":"2017-03-23T04:34:10.000Z","updated":"2017-03-23T04:34:10.000Z","comments":true,"path":"2017/03/23/设计模式-适配器模式/","link":"","permalink":"https://bifenghui.github.io/2017/03/23/设计模式-适配器模式/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"设计模式-命令模式","slug":"设计模式-命令模式","date":"2017-03-23T04:33:34.000Z","updated":"2017-03-23T04:33:34.000Z","comments":true,"path":"2017/03/23/设计模式-命令模式/","link":"","permalink":"https://bifenghui.github.io/2017/03/23/设计模式-命令模式/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"spring 系列之Spring自定义注解","slug":"spring-系列之Spring自定义注解","date":"2017-03-20T17:33:03.000Z","updated":"2017-03-20T17:33:03.000Z","comments":true,"path":"2017/03/21/spring-系列之Spring自定义注解/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/spring-系列之Spring自定义注解/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"搬瓦工服务器购买+ss搭建","slug":"搬瓦工服务器购买-ss搭建","date":"2017-03-20T17:32:20.000Z","updated":"2017-03-20T17:32:20.000Z","comments":true,"path":"2017/03/21/搬瓦工服务器购买-ss搭建/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/搬瓦工服务器购买-ss搭建/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"nexus 私服搭建","slug":"nexus-私服搭建","date":"2017-03-20T17:30:56.000Z","updated":"2017-03-20T17:30:56.000Z","comments":true,"path":"2017/03/21/nexus-私服搭建/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/nexus-私服搭建/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"spring 系列之Spring Boot","slug":"spring-系列之Spring-Boot","date":"2017-03-20T17:29:14.000Z","updated":"2017-03-20T17:29:14.000Z","comments":true,"path":"2017/03/21/spring-系列之Spring-Boot/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/spring-系列之Spring-Boot/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"gerrit 代码审核服务器搭建","slug":"gerrit-代码审核服务器搭建","date":"2017-03-20T17:28:30.000Z","updated":"2017-03-20T17:28:30.000Z","comments":true,"path":"2017/03/21/gerrit-代码审核服务器搭建/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/gerrit-代码审核服务器搭建/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"分布式系统设计理念","slug":"分布式系统设计理念","date":"2017-03-20T17:27:23.000Z","updated":"2017-03-20T17:27:23.000Z","comments":true,"path":"2017/03/21/分布式系统设计理念/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/分布式系统设计理念/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"spring 系列之Spring Security","slug":"spring-系列之Spring-Security","date":"2017-03-20T17:26:30.000Z","updated":"2017-03-20T17:26:30.000Z","comments":true,"path":"2017/03/21/spring-系列之Spring-Security/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/spring-系列之Spring-Security/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Apache Shiro","slug":"Apache-Shiro","date":"2017-03-20T17:25:55.000Z","updated":"2017-03-20T17:25:55.000Z","comments":true,"path":"2017/03/21/Apache-Shiro/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/Apache-Shiro/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"java日志框架-logback","slug":"java日志框架-logback","date":"2017-03-20T17:25:47.000Z","updated":"2017-03-20T17:25:47.000Z","comments":true,"path":"2017/03/21/java日志框架-logback/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/java日志框架-logback/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"csrf攻击","slug":"csrf攻击","date":"2017-03-20T17:22:21.000Z","updated":"2017-03-20T17:22:21.000Z","comments":true,"path":"2017/03/21/csrf攻击/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/csrf攻击/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"微信公众号申请流程和开发接入","slug":"微信公众号申请流程和开发接入","date":"2017-03-20T17:15:11.000Z","updated":"2017-03-20T17:15:11.000Z","comments":true,"path":"2017/03/21/微信公众号申请流程和开发接入/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/微信公众号申请流程和开发接入/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"maven系列一","slug":"maven系列一","date":"2017-03-20T17:14:08.000Z","updated":"2017-03-20T17:36:13.000Z","comments":true,"path":"2017/03/21/maven系列一/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/maven系列一/","excerpt":"","text":"","categories":[{"name":"maven","slug":"maven","permalink":"https://bifenghui.github.io/categories/maven/"}],"tags":[{"name":"maven","slug":"maven","permalink":"https://bifenghui.github.io/tags/maven/"}]},{"title":"重构代码系列一","slug":"重构代码系列一","date":"2017-03-20T17:12:17.000Z","updated":"2017-03-20T17:12:17.000Z","comments":true,"path":"2017/03/21/重构代码系列一/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/重构代码系列一/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"数据库系列-mysql","slug":"数据库系列-mysql","date":"2017-03-20T17:11:28.000Z","updated":"2017-03-20T17:11:28.000Z","comments":true,"path":"2017/03/21/数据库系列-mysql/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/数据库系列-mysql/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"腾讯云ssl证书","slug":"腾讯云ssl证书","date":"2017-03-20T17:10:55.000Z","updated":"2017-03-20T17:10:55.000Z","comments":true,"path":"2017/03/21/腾讯云ssl证书/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/腾讯云ssl证书/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"阿里云域名备案","slug":"阿里云域名备案","date":"2017-03-20T17:10:37.000Z","updated":"2017-03-20T17:36:32.000Z","comments":true,"path":"2017/03/21/阿里云域名备案/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/阿里云域名备案/","excerpt":"","text":"","categories":[{"name":"阿里云","slug":"阿里云","permalink":"https://bifenghui.github.io/categories/阿里云/"}],"tags":[{"name":"阿里云","slug":"阿里云","permalink":"https://bifenghui.github.io/tags/阿里云/"}]},{"title":"spring 系列一","slug":"spring-系列一","date":"2017-03-20T17:09:55.000Z","updated":"2017-03-20T17:09:55.000Z","comments":true,"path":"2017/03/21/spring-系列一/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/spring-系列一/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"python3","slug":"python3","date":"2017-03-20T17:09:09.000Z","updated":"2017-03-20T17:09:09.000Z","comments":true,"path":"2017/03/21/python3/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/python3/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"poi","slug":"poi","date":"2017-03-20T17:09:00.000Z","updated":"2017-03-20T17:09:00.000Z","comments":true,"path":"2017/03/21/poi/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/poi/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"支付接口开发","slug":"支付接口开发","date":"2017-03-20T17:08:41.000Z","updated":"2017-03-20T17:08:41.000Z","comments":true,"path":"2017/03/21/支付接口开发/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/支付接口开发/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"微信网页授权","slug":"微信网页授权","date":"2017-03-20T17:08:23.000Z","updated":"2017-03-20T17:08:23.000Z","comments":true,"path":"2017/03/21/微信网页授权/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/微信网页授权/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"reactjs","slug":"reactjs","date":"2017-03-20T17:06:29.000Z","updated":"2017-03-20T17:06:29.000Z","comments":true,"path":"2017/03/21/reactjs/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/reactjs/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"nodejs","slug":"nodejs","date":"2017-03-20T17:06:10.000Z","updated":"2017-03-20T17:06:10.000Z","comments":true,"path":"2017/03/21/nodejs/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/nodejs/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"mysql binlog","slug":"mysql-binlog","date":"2017-03-20T17:05:50.000Z","updated":"2017-03-20T17:36:13.000Z","comments":true,"path":"2017/03/21/mysql-binlog/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/mysql-binlog/","excerpt":"","text":"","categories":[{"name":"数据库","slug":"数据库","permalink":"https://bifenghui.github.io/categories/数据库/"}],"tags":[{"name":"-mysql","slug":"mysql","permalink":"https://bifenghui.github.io/tags/mysql/"}]},{"title":"memcached","slug":"memcached","date":"2017-03-20T17:05:19.000Z","updated":"2017-03-20T17:36:13.000Z","comments":true,"path":"2017/03/21/memcached/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/memcached/","excerpt":"","text":"","categories":[{"name":"memcached","slug":"memcached","permalink":"https://bifenghui.github.io/categories/memcached/"}],"tags":[{"name":"memcached","slug":"memcached","permalink":"https://bifenghui.github.io/tags/memcached/"}]},{"title":"redis","slug":"redis","date":"2017-03-20T17:04:43.000Z","updated":"2017-03-21T09:59:01.000Z","comments":true,"path":"2017/03/21/redis/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/redis/","excerpt":"","text":"redisredis","categories":[],"tags":[]},{"title":"elasticSearch 与mongo数据同步","slug":"elasticSearch-与mongo数据同步","date":"2017-03-20T17:04:31.000Z","updated":"2017-03-20T17:04:31.000Z","comments":true,"path":"2017/03/21/elasticSearch-与mongo数据同步/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/elasticSearch-与mongo数据同步/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"elasticSearch 基本语法","slug":"elasticSearch-基本语法","date":"2017-03-20T17:04:07.000Z","updated":"2017-03-20T17:04:07.000Z","comments":true,"path":"2017/03/21/elasticSearch-基本语法/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/elasticSearch-基本语法/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"elasticSearch head插件","slug":"elasticSearch-head插件","date":"2017-03-20T17:04:00.000Z","updated":"2017-03-20T17:04:00.000Z","comments":true,"path":"2017/03/21/elasticSearch-head插件/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/elasticSearch-head插件/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"elasticSearch 安装","slug":"elasticSearch-安装","date":"2017-03-20T17:03:53.000Z","updated":"2017-03-20T17:03:53.000Z","comments":true,"path":"2017/03/21/elasticSearch-安装/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/elasticSearch-安装/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"elasticSearch","slug":"elasticSearch","date":"2017-03-20T17:02:57.000Z","updated":"2017-03-20T17:02:57.000Z","comments":true,"path":"2017/03/21/elasticSearch/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/elasticSearch/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"设计模式-观察者模式","slug":"设计模式-观察者模式","date":"2017-03-20T17:02:41.000Z","updated":"2017-03-21T10:04:14.000Z","comments":true,"path":"2017/03/21/设计模式-观察者模式/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/设计模式-观察者模式/","excerpt":"","text":"观察者模式主题接口1234567891011121314151617181920package priv.bifh.design.patterns;/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.design.patterns.Subject * User: bifenghui * Date: 2017/3/21 * Time: 下午3:21 * To change this template use File | Settings | File Templates. * Description: */public interface Subject &#123; public void addObserver(Observer o); public void delObserver(Observer o); public void notifyObservers();&#125; 观察者接口12345678910111213141516package priv.bifh.design.patterns;/** * Created with IntelliJ IDEA. * InterfaceName: priv.bifh.design.patterns.Observer * User: bifenghui@edianzu.cn * Date: 2017/3/21 * Time: 下午3:22 * To change this template use File | Settings | File Templates. * Description: */public interface Observer &#123; public void hearTelephone(String heardMess);&#125; 具体主题12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061package priv.bifh.design.patterns;import java.util.ArrayList;/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.design.patterns.SeekJobCenter * User: bifenghui * Date: 2017/3/21 * Time: 下午3:33 * To change this template use File | Settings | File Templates. * Description: */public class SeekJobCenter implements Subject&#123; String mess; boolean changeld; ArrayList&lt;Observer&gt; personList ; public SeekJobCenter() &#123; this.mess = \"\"; this.changeld = false; this.personList = new ArrayList&lt;&gt;(); &#125; @Override public void addObserver(Observer o) &#123; if (!personList.contains(o)) &#123; personList.add(o); &#125; &#125; @Override public void delObserver(Observer o) &#123; if (personList.contains(o)) &#123; personList.remove(o); &#125; &#125; @Override public void notifyObservers() &#123; if (changeld) &#123; for (Observer o: personList ) &#123; o.hearTelephone(mess); &#125; &#125; changeld = false; &#125; public void giveNewMess(String str)&#123; if (str.equals(mess)) &#123; changeld = false; System.out.println(\"this info is old!!!\"); &#125;else &#123; mess = str; changeld = true; &#125; &#125;&#125; 具体观察者12345678910111213141516171819202122232425262728293031323334353637383940package priv.bifh.design.patterns;import java.io.File;import java.io.RandomAccessFile;/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.design.patterns.UniversityStudent * User: bifenghui * Date: 2017/3/21 * Time: 下午3:43 * To change this template use File | Settings | File Templates. * Description: */public class UniversityStudent implements Observer&#123; Subject subject; File myFile ; public UniversityStudent(Subject subject, String fileName) &#123; this.subject = subject; subject.addObserver(this); this.myFile = new File(fileName); &#125; @Override public void hearTelephone(String heardMess) &#123; try&#123; RandomAccessFile out = new RandomAccessFile(myFile,\"rw\"); out.seek(out.length()); byte[] b = heardMess.getBytes(); out.write(b); out.write('\\n'); out.close(); &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125;&#125; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546package priv.bifh.design.patterns;import java.io.File;import java.io.RandomAccessFile;/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.design.patterns.HaiGui * User: bifenghui * Date: 2017/3/21 * Time: 下午3:53 * To change this template use File | Settings | File Templates. * Description: */public class HaiGui implements Observer&#123; Subject subject; File myFile; public HaiGui(Subject subject,String fileName) &#123; this.subject = subject; subject.addObserver(this); myFile = new File(fileName); &#125; @Override public void hearTelephone(String heardMess) &#123; try&#123; boolean boo = heardMess.contains(\"java 程序员\")||heardMess.contains(\"软件开发\"); if (boo) &#123; RandomAccessFile out = new RandomAccessFile(myFile,\"rw\"); out.seek(out.length()); byte[] b = heardMess.getBytes(); out.write(b); out.write('\\n'); out.close(); System.out.println(\"\"); &#125;else&#123; System.out.println(\"this heardMess no have which i wish\"); &#125; &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125;&#125; application123456789101112131415161718192021222324252627282930package priv.bifh.design.patterns;/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.design.patterns.Application * User: bifenghui * Date: 2017/3/21 * Time: 下午4:03 * To change this template use File | Settings | File Templates. * Description: */public class Application &#123; public static void main(String[] args) &#123; SeekJobCenter center = new SeekJobCenter(); UniversityStudent universityStudent = new UniversityStudent(center,\"a.text\"); HaiGui haiGui = new HaiGui(center,\"b.text\"); center.giveNewMess(\"阿里需要10名安全运维人员，月饼事件\"); center.notifyObservers(); center.giveNewMess(\"腾讯需要20名软件开发人员，python3、php、java等\"); center.notifyObservers(); center.giveNewMess(\"腾讯需要20名软件开发人员，python3、php、java等\"); center.notifyObservers(); &#125;&#125;","categories":[{"name":"设计模式","slug":"设计模式","permalink":"https://bifenghui.github.io/categories/设计模式/"}],"tags":[{"name":"观察者模式","slug":"观察者模式","permalink":"https://bifenghui.github.io/tags/观察者模式/"}]},{"title":"设计模式","slug":"设计模式","date":"2017-03-20T17:01:57.000Z","updated":"2017-03-20T17:01:57.000Z","comments":true,"path":"2017/03/21/设计模式/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/设计模式/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"mongo java api引入","slug":"mongo-java-api引入","date":"2017-03-20T16:59:26.000Z","updated":"2017-03-20T17:36:13.000Z","comments":true,"path":"2017/03/21/mongo-java-api引入/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/mongo-java-api引入/","excerpt":"","text":"","categories":[{"name":"mongo","slug":"mongo","permalink":"https://bifenghui.github.io/categories/mongo/"}],"tags":[{"name":"mongo","slug":"mongo","permalink":"https://bifenghui.github.io/tags/mongo/"}]},{"title":"mongo 备份与回滚","slug":"mongo-备份与回滚","date":"2017-03-20T16:58:45.000Z","updated":"2017-03-20T17:36:13.000Z","comments":true,"path":"2017/03/21/mongo-备份与回滚/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/mongo-备份与回滚/","excerpt":"","text":"","categories":[{"name":"mongo","slug":"mongo","permalink":"https://bifenghui.github.io/categories/mongo/"}],"tags":[{"name":"-mongo","slug":"mongo","permalink":"https://bifenghui.github.io/tags/mongo/"}]},{"title":"mongo 基本命令","slug":"mongo-基本命令","date":"2017-03-20T16:57:52.000Z","updated":"2017-03-20T17:36:13.000Z","comments":true,"path":"2017/03/21/mongo-基本命令/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/mongo-基本命令/","excerpt":"","text":"","categories":[{"name":"mongo","slug":"mongo","permalink":"https://bifenghui.github.io/categories/mongo/"}],"tags":[{"name":"mongo","slug":"mongo","permalink":"https://bifenghui.github.io/tags/mongo/"}]},{"title":"mongo 安装","slug":"mongo-安装","date":"2017-03-20T16:57:43.000Z","updated":"2017-03-20T17:36:13.000Z","comments":true,"path":"2017/03/21/mongo-安装/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/mongo-安装/","excerpt":"","text":"","categories":[{"name":"mongo","slug":"mongo","permalink":"https://bifenghui.github.io/categories/mongo/"}],"tags":[{"name":"mongo","slug":"mongo","permalink":"https://bifenghui.github.io/tags/mongo/"}]},{"title":"springMvc（一）","slug":"springMvc（一）","date":"2017-03-20T16:57:10.000Z","updated":"2017-03-20T16:57:10.000Z","comments":true,"path":"2017/03/21/springMvc（一）/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/springMvc（一）/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"spring aop","slug":"spring-aop","date":"2017-03-20T16:56:35.000Z","updated":"2017-03-20T17:00:39.000Z","comments":true,"path":"2017/03/21/spring-aop/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/spring-aop/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"linux 定时任务","slug":"linux-定时任务","date":"2017-03-20T16:56:19.000Z","updated":"2017-03-20T17:36:13.000Z","comments":true,"path":"2017/03/21/linux-定时任务/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/linux-定时任务/","excerpt":"","text":"","categories":[{"name":"linux","slug":"linux","permalink":"https://bifenghui.github.io/categories/linux/"}],"tags":[{"name":"crontab","slug":"crontab","permalink":"https://bifenghui.github.io/tags/crontab/"}]},{"title":"git checkout、reset、revert","slug":"git-checkout、reset、revert","date":"2017-03-20T16:55:09.000Z","updated":"2017-03-20T16:55:46.000Z","comments":true,"path":"2017/03/21/git-checkout、reset、revert/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/git-checkout、reset、revert/","excerpt":"","text":"","categories":[{"name":"git","slug":"git","permalink":"https://bifenghui.github.io/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://bifenghui.github.io/tags/git/"}]},{"title":"git 基本命令","slug":"git-基本命令","date":"2017-03-20T16:41:16.000Z","updated":"2017-03-20T16:55:46.000Z","comments":true,"path":"2017/03/21/git-基本命令/","link":"","permalink":"https://bifenghui.github.io/2017/03/21/git-基本命令/","excerpt":"参考链接：git命令大全 git 命令大全git init # 初始化本地git仓库（创建新仓库）git config –global user.name “xxx” # 配置用户名git config –global user.email “xxx@xxx.com” # 配置邮件git config –global color.ui true # git status等命令自动着色git config –global color.status autogit config –global color.diff autogit config –global color.branch auto","text":"参考链接：git命令大全 git 命令大全git init # 初始化本地git仓库（创建新仓库）git config –global user.name “xxx” # 配置用户名git config –global user.email “xxx@xxx.com” # 配置邮件git config –global color.ui true # git status等命令自动着色git config –global color.status autogit config –global color.diff autogit config –global color.branch autogit config –global color.interactive autogit config –global –unset http.proxy # remove proxy configuration on gitgit clone git+ssh://git@192.168.53.168/VT.git # clone远程仓库git status # 查看当前版本状态（是否修改）git add xyz # 添加xyz文件至indexgit add . # 增加当前子目录下所有更改过的文件至indexgit commit -m ‘xxx’ # 提交git commit –amend -m ‘xxx’ # 合并上一次提交（用于反复修改）git commit -am ‘xxx’ # 将add和commit合为一步git rm xxx # 删除index中的文件git rm -r * # 递归删除git log # 显示提交日志git log -1 # 显示1行日志 -n为n行git log -5git log –stat # 显示提交日志及相关变动文件git log -p -mgit show dfb02e6e4f2f7b573337763e5c0013802e392818 # 显示某个提交的详细内容git show dfb02 # 可只用commitid的前几位git show HEAD # 显示HEAD提交日志git show HEAD^ # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本git tag # 显示已存在的taggit tag -a v2.0 -m ‘xxx’ # 增加v2.0的taggit show v2.0 # 显示v2.0的日志及详细内容git log v2.0 # 显示v2.0的日志git diff # 显示所有未添加至index的变更git diff –cached # 显示所有已添加index但还未commit的变更git diff HEAD^ # 比较与上一个版本的差异git diff HEAD – ./lib # 比较与HEAD版本lib目录的差异git diff origin/master..master # 比较远程分支master上有本地分支master上没有的git diff origin/master..master –stat # 只显示差异的文件，不显示具体内容git remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）git branch # 显示本地分支git branch –contains 50089 # 显示包含提交50089的分支git branch -a # 显示所有分支git branch -r # 显示所有原创分支git branch –merged # 显示所有已合并到当前分支的分支git branch –no-merged # 显示所有未合并到当前分支的分支git branch -m master master_copy # 本地分支改名git checkout -b master_copy # 从当前分支创建新分支master_copy并检出git checkout -b master master_copy # 上面的完整版git checkout features/performance # 检出已存在的features/performance分支git checkout –track hotfixes/BJVEP933 # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支git checkout v2.0 # 检出版本v2.0git checkout -b devel origin/develop # 从远程分支develop创建新本地分支devel并检出git checkout – README # 检出head版本的README文件（可用于修改错误回退）git merge origin/master # 合并远程master分支至当前分支git cherry-pick ff44785404a8e # 合并提交ff44785404a8e的修改git push origin master # 将当前分支push到远程master分支git push origin :hotfixes/BJVEP933 # 删除远程仓库的hotfixes/BJVEP933分支git push –tags # 把所有tag推送到远程仓库git fetch # 获取所有远程分支（不更新本地分支，另需merge）git fetch –prune # 获取所有原创分支并清除服务器上已删掉的分支git pull origin master # 获取远程分支master并merge到当前分支git mv README README2 # 重命名文件README为README2git reset –hard HEAD # 将当前版本重置为HEAD（通常用于merge失败回退）git rebasegit branch -d hotfixes/BJVEP933 # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）git branch -D hotfixes/BJVEP933 # 强制删除分支hotfixes/BJVEP933git ls-files # 列出git index包含的文件git show-branch # 图示当前分支历史git show-branch –all # 图示所有分支历史git whatchanged # 显示提交历史对应的文件修改git revert dfb02e6e4f2f7b573337763e5c0013802e392818 # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818git ls-tree HEAD # 内部命令：显示某个git对象git rev-parse v2.0 # 内部命令：显示某个ref对于的SHA1 HASHgit reflog # 显示所有提交，包括孤立节点git show HEAD@{5}git show master@{yesterday} # 显示master分支昨天的状态git log –pretty=format:’%h %s’ –graph # 图示提交日志git show HEAD~3git show -s –pretty=raw 2be7fcb476git stash # 暂存当前修改，将所有至为HEAD状态git stash list # 查看所有暂存git stash show -p stash@{0} # 参考第一次暂存git stash apply stash@{0} # 应用第一次暂存git grep “delete from” # 文件中搜索文本“delete from”git grep -e ‘#define’ –and -e SORT_DIRENTgit gcgit fsck","categories":[{"name":"git","slug":"git","permalink":"https://bifenghui.github.io/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://bifenghui.github.io/tags/git/"}]},{"title":"oh my zsh 使用","slug":"oh-my-zsh-使用","date":"2017-03-20T09:51:12.000Z","updated":"2017-03-20T14:30:56.000Z","comments":true,"path":"2017/03/20/oh-my-zsh-使用/","link":"","permalink":"https://bifenghui.github.io/2017/03/20/oh-my-zsh-使用/","excerpt":"查看系统安装的shell123456789cat /etc/shells# /etc/shells: valid login shells/bin/sh/bin/dash/bin/bash/bin/rbash/bin/zsh/usr/bin/zsh 查看当前系统使用的shell123echo $SHELL/bin/zsh","text":"查看系统安装的shell123456789cat /etc/shells# /etc/shells: valid login shells/bin/sh/bin/dash/bin/bash/bin/rbash/bin/zsh/usr/bin/zsh 查看当前系统使用的shell123echo $SHELL/bin/zsh 下载zsh以ubuntu 为例1apt-get install zsh git wget oh my zsh12345wget --no-check-certificate https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh或者curl -L http://install.ohmyz.sh | sh 切换zsh1chsh -s $(which zsh) 编辑～/.zshrc1vim ~/.zshrc 末尾可添加（除以下命令之外，还可以添加更多简化命令，如git 等）123456789101112131415alias cls=&apos;clear&apos;alias ll=&apos;ls -l&apos;alias la=&apos;ls -a&apos;alias grep=&quot;grep --color=auto&quot;alias -s html=&apos;vim&apos; # 在命令行直接输入后缀为 html 的文件名，会在 Vim 中打开alias -s rb=&apos;vim&apos; # 在命令行直接输入 ruby 文件，会在 Vim 中打开alias -s py=&apos;vim&apos; # 在命令行直接输入 python 文件，会用 vim 中打开，以下类似alias -s js=&apos;vim&apos;alias -s c=&apos;vim&apos;alias -s java=&apos;vim&apos;alias -s txt=&apos;vim&apos;alias -s gz=&apos;tar -xzvf&apos; # 在命令行直接输入后缀为 gz 的文件名，会自动解压打开alias -s tgz=&apos;tar -xzvf&apos;alias -s zip=&apos;unzip&apos;alias -s bz2=&apos;tar -xjvf&apos;","categories":[{"name":"zsh","slug":"zsh","permalink":"https://bifenghui.github.io/categories/zsh/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://bifenghui.github.io/tags/shell/"},{"name":"linux","slug":"linux","permalink":"https://bifenghui.github.io/tags/linux/"}]},{"title":"Object对象-wait、notify、notifyAll.md","slug":"Object对象-wait、notify、notifyAll","date":"2017-03-20T04:02:31.000Z","updated":"2017-03-20T14:34:58.000Z","comments":true,"path":"2017/03/20/Object对象-wait、notify、notifyAll/","link":"","permalink":"https://bifenghui.github.io/2017/03/20/Object对象-wait、notify、notifyAll/","excerpt":"wait通知当前执行代码的线程进入等待，将当前线程放入预备执行的队列中。wait对象释放锁，所以wait对象必须在同步块或者方法中进行的执行 notify通知等待执行 wait线程 中某一线程， 让它尝试获取该对象的对象锁（notify释放锁后由wait线程获得），进入可执行状态。notify 必须在同步块或同步方法中 notifyAll通知所有处于等待状态的线程 尝试去获得对象锁，进入可执行状态。","text":"wait通知当前执行代码的线程进入等待，将当前线程放入预备执行的队列中。wait对象释放锁，所以wait对象必须在同步块或者方法中进行的执行 notify通知等待执行 wait线程 中某一线程， 让它尝试获取该对象的对象锁（notify释放锁后由wait线程获得），进入可执行状态。notify 必须在同步块或同步方法中 notifyAll通知所有处于等待状态的线程 尝试去获得对象锁，进入可执行状态。 总结wait()方法可以使调用该线程的方法释放共享资源的锁，然后从运行状态退出，进入等待队列，直到再次被唤醒。 notify()方法可以随机唤醒等待队列中等待同一共享资源的一个线程，并使得该线程退出等待状态，进入可运行状态 notifyAll()方法可以使所有正在等待队列中等待同一共享资源的全部线程从等待状态退出，进入可运行状态 #示例代码 wait 与 notify123456789101112131415161718192021222324252627282930313233package priv.bifh.lock;/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.lock.BifhThread03_1 * User: bifenghui * Date: 2017/3/20 * Time: 上午9:01 * To change this template use File | Settings | File Templates. * Description: */public class BifhThread03_1 extends Thread &#123; private Object lock = null; public BifhThread03_1(Object lock) &#123; this.lock = lock; &#125; @Override public void run() &#123;// super.run(); synchronized (lock)&#123; System.out.println(\"wait start time!\"); try &#123; lock.wait(); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; System.out.println(\"wait end time!\"); &#125; &#125;&#125; 123456789101112131415161718192021222324252627282930313233package priv.bifh.lock;/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.lock.BifhThread03_2 * User: bifenghui * Date: 2017/3/20 * Time: 上午9:01 * To change this template use File | Settings | File Templates. * Description: */public class BifhThread03_2 extends Thread&#123; private Object lock = null; public BifhThread03_2(Object lock) &#123; this.lock = lock; &#125; @Override public void run() &#123; synchronized (lock)&#123; System.out.println(\"notify start time!\"); lock.notify(); try &#123; Thread.sleep(1000); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; System.out.println(\"notify end time!\"); &#125; &#125;&#125; 12345678910111213141516171819202122package priv.bifh.lock;/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.lock.Bifh03Test * User: bifenghui * Date: 2017/3/20 * Time: 上午11:08 * To change this template use File | Settings | File Templates. * Description: */public class Bifh03Test &#123; public static void main(String[] args) &#123; Object lock = new Object(); BifhThread03_1 thread03_1 = new BifhThread03_1(lock); BifhThread03_2 thread03_2 = new BifhThread03_2(lock); thread03_1.start(); thread03_2.start(); &#125;&#125; 输出结果：1234wait start time!notify start time!notify end time!wait end time! wait释放锁，没有notify的话 处于wait的线程不会被执行1234567891011121314151617181920212223242526272829303132333435363738package priv.bifh.lock.notify;/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.lock.notify.BifhThreadNotify01 * User: bifenghui * Date: 2017/3/20 * Time: 上午11:15 * To change this template use File | Settings | File Templates. * Description: */public class BifhThreadNotify01 extends Thread &#123; private Object lock ; public BifhThreadNotify01( Object lock) &#123; this.lock = lock; &#125; @Override public void run() &#123; synchronized (lock)&#123; System.out.println(\"wait是否释放锁 开始\"); try &#123; lock.wait();// Thread.sleep(1000); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; //此处方法不会执行 如果没有notify的话 System.out.println(\"wait是否释放所 结束\"); &#125; &#125;&#125; 12345678910111213141516171819202122232425package priv.bifh.lock.notify;/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.lock.notify.BifhThreadNotify02 * User: bifenghui * Date: 2017/3/20 * Time: 上午11:18 * To change this template use File | Settings | File Templates. * Description: */public class BifhThreadNotify02 extends Thread &#123; private Object lock; public BifhThreadNotify02(Object lock) &#123; this.lock = lock; &#125; @Override public void run() &#123; BifhThreadNotify01 bifhThreadNotify01 = new BifhThreadNotify01(lock); bifhThreadNotify01.start(); &#125;&#125; 123456789101112131415161718192021package priv.bifh.lock.notify;/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.lock.notify.BifhTestNotify * User: bifenghui * Date: 2017/3/20 * Time: 上午11:23 * To change this template use File | Settings | File Templates. * Description: */public class BifhTestNotify &#123; public static void main(String[] args) &#123; Object lock = new Object(); BifhThreadNotify02 test1 = new BifhThreadNotify02(lock); BifhThreadNotify02 test2 = new BifhThreadNotify02(lock); test1.start(); test2.start(); &#125;&#125; 输出结果： 示例2:1234567891011121314151617181920212223242526272829303132333435363738package priv.bifh.lock.notify002;/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.lock.notify002.TestWaitNotify * User: bifenghui * Date: 2017/3/20 * Time: 上午11:47 * To change this template use File | Settings | File Templates. * Description: */public class TestWaitNotify &#123; private Object lock; public TestWaitNotify(Object lock) &#123; this.lock = lock; &#125; public void testWait() throws InterruptedException &#123; synchronized (lock)&#123; System.out.println(\"testWait --- start\"); lock.wait(); System.out.println(\"testWait --- end\"); &#125; &#125; public void testNotify() throws InterruptedException &#123; synchronized (lock)&#123; System.out.println(\"testNotify --- start\"); lock.notify(); Thread.sleep(10000); System.out.println(\"testNotify --- end\"); &#125; &#125;&#125; 123456789101112131415161718192021222324252627282930package priv.bifh.lock.notify002;/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.lock.notify002.WNThread01 * User: bifenghui * Date: 2017/3/20 * Time: 上午11:54 * To change this template use File | Settings | File Templates. * Description: */public class WNThread01 extends Thread &#123; private Object lock; public WNThread01(Object lock) &#123; this.lock = lock; &#125; @Override public void run() &#123; TestWaitNotify testWaitNotify = new TestWaitNotify(lock); try &#123; testWaitNotify.testWait(); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; &#125;&#125; 1234567891011121314151617181920212223242526272829package priv.bifh.lock.notify002;/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.lock.notify002.WNThread01 * User: bifenghui * Date: 2017/3/20 * Time: 上午11:54 * To change this template use File | Settings | File Templates. * Description: */public class WNThread02 extends Thread &#123; private Object lock; public WNThread02(Object lock) &#123; this.lock = lock; &#125; @Override public void run() &#123; TestWaitNotify testWaitNotify = new TestWaitNotify(lock); try &#123; testWaitNotify.testNotify(); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; &#125;&#125; 1234567891011121314151617181920212223package priv.bifh.lock.notify002;/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.lock.notify002.Test * User: bifenghui * Date: 2017/3/20 * Time: 下午12:03 * To change this template use File | Settings | File Templates. * Description: */public class Test &#123; public static void main(String[] args) &#123; String lock = \"1\"; WNThread01 wnThread01 = new WNThread01(lock); WNThread02 wnThread02 = new WNThread02(lock); wnThread01.start(); wnThread02.start(); &#125;&#125; 输出：1234testWait --- starttestNotify --- starttestNotify --- endtestWait --- end notifyAll 会唤醒所有处于wait 的线程思路：代码1、同一锁对象，写多个线程，启动，run方法实现中 调用wait方法。2、线程x run方法实现中 调用notifyAll方法3、所有wait线程执行完成","categories":[{"name":"多线程","slug":"多线程","permalink":"https://bifenghui.github.io/categories/多线程/"}],"tags":[{"name":"多线程","slug":"多线程","permalink":"https://bifenghui.github.io/tags/多线程/"}]},{"title":"多线程常用api","slug":"多线程常用api","date":"2017-03-18T08:11:18.000Z","updated":"2017-03-20T14:34:58.000Z","comments":true,"path":"2017/03/18/多线程常用api/","link":"","permalink":"https://bifenghui.github.io/2017/03/18/多线程常用api/","excerpt":"start调用start方法表示线程可以执行了，等待获得cpu资源执行run方法 run单独调用线程run方法没有效果，必须先调用start方法修改线程状态 isAlive判断线程是否处于活动状态，线程不结束，返true getId获得当前线程的id，全局long threadSeqNumber通过自增赋值给线程id， 由Thread完成。 getName获取当前线程的名称，默认为Thread-threadInitNum 此threadInitNum 由jvm按照全局int变量进行和自增。可以指定线程的名称 setName()","text":"start调用start方法表示线程可以执行了，等待获得cpu资源执行run方法 run单独调用线程run方法没有效果，必须先调用start方法修改线程状态 isAlive判断线程是否处于活动状态，线程不结束，返true getId获得当前线程的id，全局long threadSeqNumber通过自增赋值给线程id， 由Thread完成。 getName获取当前线程的名称，默认为Thread-threadInitNum 此threadInitNum 由jvm按照全局int变量进行和自增。可以指定线程的名称 setName() getPriority获取线程优先级默认优先级为5 setPriority设置线程的优先级，优先级高的线程获取cpu资源的概率更高。优先级有集成传递性 isDaemon、setDaemon(boolean on)守护线程，指定在守护的线程执行的完成后才结束的线程。如gc线程线程一直为守护线程isDaemon 是否守护线程 ，setDaemon(boolean),true设置线程为守护线程 false 线程不是守护线程代码：执行以下代码，发现线程依然可以从while(true)中跳出1234567891011121314151617181920212223242526/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.Daemon.TestDaemon * User: bifenghui@ * Date: 2017/3/18 * Time: 下午3:32 * To change this template use File | Settings | File Templates. * Description: */public class TestDaemon extends Thread &#123; @Override public void run() &#123;// super.run(); int i = 0; while (true) &#123; i++; System.out.println(\"******11111***\" + i); try &#123; Thread.sleep(1000); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; &#125; &#125;&#125; 1234567891011121314151617181920212223/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.Daemon.DaemonTest * User: bifenghui * Date: 2017/3/18 * Time: 下午3:34 * To change this template use File | Settings | File Templates. * Description: */public class DaemonTest &#123; public static void main(String[] args) throws InterruptedException &#123; TestDaemon daemonTest = new TestDaemon(); daemonTest.setDaemon(true); daemonTest.start(); Thread.sleep(5000); System.out.println(\"**********\"); &#125;&#125; interrupt 、 isInterrupted()interrupt 打断线程，此时会抛出线程打断异常只有处于阻塞的线程才会被打断，非阻塞的线程不存在打断isInterrupted 线程是否被打断 join()方法是调用join方法的线程所在线程无限阻塞。代码：利用守护线程的例子，修改DaemonTest 增加 daemonTest.join(); ，发现代码变成了死循环123456789101112131415161718192021222324/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.Daemon.DaemonTest * User: bifenghui * Date: 2017/3/18 * Time: 下午3:34 * To change this template use File | Settings | File Templates. * Description: */public class DaemonTest &#123; public static void main(String[] args) throws InterruptedException &#123; TestDaemon daemonTest = new TestDaemon(); daemonTest.setDaemon(true); daemonTest.start(); daemonTest.join(); //死锁 Thread.sleep(5000); System.out.println(\"**********\"); &#125;&#125;","categories":[{"name":"多线程","slug":"多线程","permalink":"https://bifenghui.github.io/categories/多线程/"}],"tags":[{"name":"多线程","slug":"多线程","permalink":"https://bifenghui.github.io/tags/多线程/"}]},{"title":"多线程介绍与实现","slug":"多线程介绍与实现","date":"2017-03-18T05:45:35.000Z","updated":"2017-03-20T14:34:58.000Z","comments":true,"path":"2017/03/18/多线程介绍与实现/","link":"","permalink":"https://bifenghui.github.io/2017/03/18/多线程介绍与实现/","excerpt":"定义进程是操作系统运行的基本单元，每个进程中又多个子任务运行，任务及线程，即多线程 用途提升程序的性能提升多核cpu利用效率提升单核cpu吞吐量有效防止线程阻塞 实现继承Thread类1234567891011121314151617/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.thread.TestRunnable * User: bifenghui@edianzu.cn * Date: 2017/3/18 * Time: 下午2:05 * To change this template use File | Settings | File Templates. * Description: */public class TestRunnable implements Runnable &#123; @Override public void run() &#123; for (int i = 0; i &lt; 10; i++) &#123; System.out.println(Thread.currentThread().getName()+i); &#125; &#125;&#125; 实现Runnable 接口12345678910111213141516171819/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.thread.TestThread * User: bifenghui@edianzu.cn * Date: 2017/3/18 * Time: 下午2:03 * To change this template use File | Settings | File Templates. * Description: */public class TestThread extends Thread&#123; @Override public void run() &#123;// super.run(); for (int i = 0; i &lt; 10 ; i++) &#123; System.out.println(this.currentThread().getName()+i); &#125; &#125;&#125;","text":"定义进程是操作系统运行的基本单元，每个进程中又多个子任务运行，任务及线程，即多线程 用途提升程序的性能提升多核cpu利用效率提升单核cpu吞吐量有效防止线程阻塞 实现继承Thread类1234567891011121314151617/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.thread.TestRunnable * User: bifenghui@edianzu.cn * Date: 2017/3/18 * Time: 下午2:05 * To change this template use File | Settings | File Templates. * Description: */public class TestRunnable implements Runnable &#123; @Override public void run() &#123; for (int i = 0; i &lt; 10; i++) &#123; System.out.println(Thread.currentThread().getName()+i); &#125; &#125;&#125; 实现Runnable 接口12345678910111213141516171819/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.thread.TestThread * User: bifenghui@edianzu.cn * Date: 2017/3/18 * Time: 下午2:03 * To change this template use File | Settings | File Templates. * Description: */public class TestThread extends Thread&#123; @Override public void run() &#123;// super.run(); for (int i = 0; i &lt; 10 ; i++) &#123; System.out.println(this.currentThread().getName()+i); &#125; &#125;&#125; ##测试12345678910111213141516171819202122232425262728/** * Created with IntelliJ IDEA. * ClassName: priv.bifh.test.ThreadTest * User: bifenghui@edianzu.cn * Date: 2017/3/18 * Time: 下午2:12 * To change this template use File | Settings | File Templates. * Description: */public class ThreadTest &#123; public static void main(String[] args) throws InterruptedException &#123; TestThread testThread = new TestThread(); for (int i = 0; i &lt;10 ; i++) &#123;// Thread.sleep(1000); System.out.println(Thread.currentThread().getName()+i); &#125; TestRunnable testRunnable = new TestRunnable(); Thread thread = new Thread(testRunnable); testThread.start(); thread.start(); &#125;&#125; 状态newnew Thread(),但没有调用start方法 可运行状态RUNNABLE thread.start()，线程处于可运行状态，此时可能已经在jvm中运行，也可能在等待cpu资源 阻塞BLOCKED线程等待获取一个同步锁进入同步块的时候，此时处于阻塞状态 等待WAITING线程调用没有设定等待时间 wait方法、join方法、（注jdk1.5后提供 java.util.concurren：LockSupport的park()方法） 超时等待TIMED_WAITING线程调用又设定超时时间的wait方法，join方法，sleep方法（LockSupport的parkNanos()方法、LockSupport的parkUntil()方法） 终止状态TERMINATED线程执行完run方法后，线程结束。不再具备继续运行的能力","categories":[{"name":"多线程","slug":"多线程","permalink":"https://bifenghui.github.io/categories/多线程/"}],"tags":[{"name":"多线程","slug":"多线程","permalink":"https://bifenghui.github.io/tags/多线程/"}]},{"title":"nginx","slug":"nginx","date":"2017-03-17T14:16:47.000Z","updated":"2017-03-20T14:34:58.000Z","comments":true,"path":"2017/03/17/nginx/","link":"","permalink":"https://bifenghui.github.io/2017/03/17/nginx/","excerpt":"nginx简介Nginx是俄罗斯人编写的十分轻量级的HTTP服务器，是一个高性能的HTTP和反向代理服务器，同时也是一个IMAP/POP3/SMTP 代理服务器 nginx用途正向代理、反向代理正向代理客户端甲需要访问服务器A，甲提交指向A的请求到 代理服务器B，代理服务器B请求A后返回数据给甲。例如 vpn、ss 等甲需要提供 代理服务器的ip、port等 反向代理客户端甲直接提交请求到服务器A，A据甲的请求判断 发送请求到 具体服务器，请求成功后组织数据返回给甲甲认为 服务器A就是数据提供者,是原始服务器百度百科反向代理反向代理（Reverse Proxy）方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。 负载均衡多台原始服务器，nginx服务器据分发规则将来自客户端的请求转发的内部不同服务器。","text":"nginx简介Nginx是俄罗斯人编写的十分轻量级的HTTP服务器，是一个高性能的HTTP和反向代理服务器，同时也是一个IMAP/POP3/SMTP 代理服务器 nginx用途正向代理、反向代理正向代理客户端甲需要访问服务器A，甲提交指向A的请求到 代理服务器B，代理服务器B请求A后返回数据给甲。例如 vpn、ss 等甲需要提供 代理服务器的ip、port等 反向代理客户端甲直接提交请求到服务器A，A据甲的请求判断 发送请求到 具体服务器，请求成功后组织数据返回给甲甲认为 服务器A就是数据提供者,是原始服务器百度百科反向代理反向代理（Reverse Proxy）方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。 负载均衡多台原始服务器，nginx服务器据分发规则将来自客户端的请求转发的内部不同服务器。 分发规则RR默认按照服务器配置顺序依次将来自客户的请求分发给内部服务器，nginx服务器会自动判断内部服务器是否可以请求(之前查看nginx日志会发现很多由nginx产生的get请求) 权重指定每台服务器的weight，weight和访问比率成正比 ip_hash指定ip_bash访问策略，解决状态访问问题，例如session等。据用户的ip的hash分配服务器，使用户固定访问一个服务器。注：解决session问题其他策略，可将session单独提取出来放入缓存或者nosql等数据库，如redis，web服务提供拦截器拦截需要请求绑定session fair（第三方）根据内部服务器请求效率、响应时间优先分配请求 url_hash（第三方）据url的hash指定分发请求的内部服务器，可指定具体的hash算法。同时不允许再写入权重参数 http服务器可以作为一个http资源服务器1234567891011121314server &#123; listen 80; server_name localhost; client_max_body_size 1024M; location / &#123; root /data/www; &#125; location /images/ &#123; root /data; &#125; &#125; &#125; 动静分离据不同的请求表达式配置实现动静分离 nginx安装mac已经安装的homebrew包管理工具的情况下brew search nginxbrew install nginx等待安装完成 nginx -v1nginx version: nginx/1.10.3 nginx -t12nginx: the configuration file /usr/local/etc/nginx/nginx.conf syntax is oknginx: configuration file /usr/local/etc/nginx/nginx.conf test is successful 启动nginxnginx 或者nginx -c /usr/local/etc/nginx/nginx.conf 查看进程ps -ef|grep nginx 访问页面nginx本地启动访问访问后可以看到 Welcome to nginx 的页面 停止nginx强制停止pkill -9 nginxkill -QUIT 进程号 快速停止kill -TERM 进程号 或者 kill -INT 进程号 nginx重启nginx -s reload nginx配置nginx运行的用户和用户组user www www;默认 #user nobody; nginx进程数，可让等于CPU总核心数worker_processes 1; 全局错误log位置、级别123#error_log logs/error.log;#error_log logs/error.log notice;#error_log logs/error.log info; 进程文件1#pid logs/nginx.pid; 工作模式与连接数123456events &#123;#参考事件模型，use [ kqueue | rtsig | epoll | /dev/poll | select | poll ]; epoll模型是Linux 2.6以上版本内核中的高性能网络I/O模型，如果跑在FreeBSD上面，就用kqueue模型。use epoll; #单个进程最大连接数（最大连接数=连接数*进程数） worker_connections 1024;&#125; httphttp { #文件扩展名与文件类型映射表 include mime.types; #默认文件类型 default_type application/octet-stream; #charset utf-8; #默认编码 server_names_hash_bucket_size 128; #服务器名字的hash表大小 client_header_buffer_size 32k; #上传文件大小限制 large_client_header_buffers 4 64k; #设定请求缓存 client_max_body_size 8m; #设定请求缓存 #日志格式 #log_format main &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos; # &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos; # &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;; #默认日志输出路径 #access_log logs/access.log main; #文件传输模式。如果用于下载等磁盘io高的应用则应该设置off。平衡网络io和磁盘io，降低系统的负载 sendfile on; #on开启，防止网络阻塞 #tcp_nopush on; tcp_nodelay on; #防止网络阻塞 #长连接超时时间，单位是秒 #keepalive_timeout 0; keepalive_timeout 65; #FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。 fastcgi_connect_timeout 300; fastcgi_send_timeout 300; fastcgi_read_timeout 300; fastcgi_buffer_size 64k; fastcgi_buffers 4 64k; fastcgi_busy_buffers_size 128k; fastcgi_temp_file_write_size 128k; #开启gzip压缩输出 #gzip on; gzip_min_length 1k; #最小压缩文件大小 gzip_buffers 4 16k; #压缩缓冲区 gzip_http_version 1.0; #压缩版本（默认1.1，前端如果是squid2.5请使用1.0） gzip_comp_level 2; #压缩等级 #压缩类型，默认就已经包含text/html gzip_types text/plain application/x-javascript text/css application/xml; gzip_vary on; #limit_zone crawler $binary_remote_addr 10m; #开启限制IP连接数的时候需要使用 #此处负载均衡配置可参考 上述 upstream { #upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表示权值，权值越高被分配到的几率越大。 server 192.168.1.101:80 weight=3; server 192.168.1.102:80 weight=2; server 192.168.1.103:80 weight=3; } #server设置123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101server &#123; #监听端口 8080 listen 8080; #监听域名 可写多个，用逗号隔开 server_name localhost; index index.html index.htm root /User/bifenghui/ #charset koi8-r; #访问日志 #access_log logs/host.access.log main; location / &#123; root html; index index.html index.htm; &#125; #图片缓存时间设置 location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$ &#123; expires 10d; &#125; #JS和CSS缓存时间设置 location ~ .*\\.(js|css)?$ &#123; expires 1h; &#125; #对 &quot;/&quot; 启用反向代理 location / &#123; proxy_pass http://127.0.0.1:88; proxy_redirect off; proxy_set_header X-Real-IP $remote_addr; #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; #以下是一些反向代理的配置，可选。 proxy_set_header Host $host; client_max_body_size 10m; #允许客户端请求的最大单文件字节数 client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数， proxy_connect_timeout 90; #nginx跟后端服务器连接超时时间(代理连接超时) proxy_send_timeout 90; #后端服务器数据回传时间(代理发送超时) proxy_read_timeout 90; #连接成功后，后端服务器响应时间(代理接收超时) proxy_buffer_size 4k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小 proxy_buffers 4 32k; #proxy_buffers缓冲区，网页平均在32k以下的设置 proxy_busy_buffers_size 64k; #高负荷下缓冲大小（proxy_buffers*2） proxy_temp_file_write_size 64k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传 &#125; #设定查看Nginx状态的地址 location /NginxStatus &#123; stub_status on; access_log on; auth_basic &quot;NginxStatus&quot;; auth_basic_user_file conf/htpasswd; #htpasswd文件的内容可以用apache提供的htpasswd工具来产生。 &#125; #本地动静分离反向代理配置 #所有jsp的页面均交由tomcat或resin处理 location ~ .(jsp|jspx|do)?$ &#123; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://127.0.0.1:8080; &#125; #所有静态文件由nginx直接读取不经过tomcat或resin location ~ .*.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma)$ &#123; expires 15d; &#125; location ~ .*.(js|css)?$ &#123; expires 1h; &#125; &#125; &#125; #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \\.php$ &#123; # proxy_pass http://127.0.0.1; #&#125; # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php$ &#123; # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #&#125; # deny access to .htaccess files, if Apache&apos;s document root # concurs with nginx&apos;s one # #location ~ /\\.ht &#123; # deny all; #&#125; &#125;","categories":[{"name":"nginx","slug":"nginx","permalink":"https://bifenghui.github.io/categories/nginx/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://bifenghui.github.io/tags/nginx/"}]},{"title":"dubbo-admin war包","slug":"dubbo-admin-war","date":"2017-03-17T05:53:29.000Z","updated":"2017-03-20T14:31:38.000Z","comments":true,"path":"2017/03/17/dubbo-admin-war/","link":"","permalink":"https://bifenghui.github.io/2017/03/17/dubbo-admin-war/","excerpt":"dubbo控制台war包dubbo-admin-2.5.4-SNAPSHOT.war dubbo阿里源码dubbo-github","text":"dubbo控制台war包dubbo-admin-2.5.4-SNAPSHOT.war dubbo阿里源码dubbo-github","categories":[{"name":"dubbo","slug":"dubbo","permalink":"https://bifenghui.github.io/categories/dubbo/"}],"tags":[{"name":"dubbo-admin","slug":"dubbo-admin","permalink":"https://bifenghui.github.io/tags/dubbo-admin/"}]},{"title":"maven","slug":"maven","date":"2017-03-17T03:05:45.000Z","updated":"2017-03-20T14:34:58.000Z","comments":true,"path":"2017/03/17/maven/","link":"","permalink":"https://bifenghui.github.io/2017/03/17/maven/","excerpt":"mavenmaven安装(mac)下载链接http://maven.apache.org/download.cgi 解压目录/usr/local/ 设置环境变量打开mac termicalexport M2_HOME=/usr/local/apache-maven-3.3.9export M2=$M2_HOME/binexport MAVEN_OPTS=”-Xms256m -Xmx512m” 添加m2变量到path中export PATH=$M2:$PATH 验证mvn –version123456Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-11T00:41:47+08:00)Maven home: /usr/local/apache-maven-3.3.9Java version: 1.8.0_111, vendor: Oracle CorporationJava home: /Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jreDefault locale: zh_CN, platform encoding: UTF-8OS name: &quot;mac os x&quot;, version: &quot;10.12.3&quot;, arch: &quot;x86_64&quot;, family: &quot;mac&quot;","text":"mavenmaven安装(mac)下载链接http://maven.apache.org/download.cgi 解压目录/usr/local/ 设置环境变量打开mac termicalexport M2_HOME=/usr/local/apache-maven-3.3.9export M2=$M2_HOME/binexport MAVEN_OPTS=”-Xms256m -Xmx512m” 添加m2变量到path中export PATH=$M2:$PATH 验证mvn –version123456Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-11T00:41:47+08:00)Maven home: /usr/local/apache-maven-3.3.9Java version: 1.8.0_111, vendor: Oracle CorporationJava home: /Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jreDefault locale: zh_CN, platform encoding: UTF-8OS name: &quot;mac os x&quot;, version: &quot;10.12.3&quot;, arch: &quot;x86_64&quot;, family: &quot;mac&quot; pom.xml创建pom.xml1234567891011&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;priv.bifh.coding&lt;/groupId&gt; &lt;artifactId&gt;mavenTest&lt;/artifactId&gt; &lt;version&gt;1.0&lt;/version&gt;&lt;/project&gt; mvn help:effective-pommvn help:effective-pomlt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;priv.bifh.coding&lt;/groupId&gt; &lt;artifactId&gt;mavenTest&lt;/artifactId&gt; &lt;version&gt;1.0&lt;/version&gt; &lt;repositories&gt; &lt;repository&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;true&lt;/updatePolicy&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;always&lt;/updatePolicy&gt; &lt;/snapshots&gt; &lt;id&gt;ali-b2&lt;/id&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/repositories/snapshots/&lt;/url&gt; &lt;/repository&gt; &lt;repository&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;always&lt;/updatePolicy&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;always&lt;/updatePolicy&gt; &lt;/snapshots&gt; &lt;id&gt;ali-b1&lt;/id&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt; &lt;/repository&gt; &lt;repository&gt; &lt;snapshots&gt; &lt;enabled&gt;false&lt;/enabled&gt; &lt;/snapshots&gt; &lt;id&gt;central&lt;/id&gt; &lt;name&gt;Central Repository&lt;/name&gt; &lt;url&gt;https://repo.maven.apache.org/maven2&lt;/url&gt; &lt;/repository&gt; &lt;/repositories&gt; &lt;pluginRepositories&gt; &lt;pluginRepository&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;true&lt;/updatePolicy&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;always&lt;/updatePolicy&gt; &lt;/snapshots&gt; &lt;id&gt;public-snapshots&lt;/id&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/repositories/snapshots/&lt;/url&gt; &lt;/pluginRepository&gt; &lt;pluginRepository&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;always&lt;/updatePolicy&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;always&lt;/updatePolicy&gt; &lt;/snapshots&gt; &lt;id&gt;central&lt;/id&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt; &lt;/pluginRepository&gt; &lt;/pluginRepositories&gt; &lt;build&gt; &lt;sourceDirectory&gt;/Users/bifenghui/work/maven_test/src/main/java&lt;/sourceDirectory&gt; &lt;scriptSourceDirectory&gt;/Users/bifenghui/work/maven_test/src/main/scripts&lt;/scriptSourceDirectory&gt; &lt;testSourceDirectory&gt;/Users/bifenghui/work/maven_test/src/test/java&lt;/testSourceDirectory&gt; &lt;outputDirectory&gt;/Users/bifenghui/work/maven_test/target/classes&lt;/outputDirectory&gt; &lt;testOutputDirectory&gt;/Users/bifenghui/work/maven_test/target/test-classes&lt;/testOutputDirectory&gt; &lt;resources&gt; &lt;resource&gt; &lt;directory&gt;/Users/bifenghui/work/maven_test/src/main/resources&lt;/directory&gt; &lt;/resource&gt; &lt;/resources&gt; &lt;testResources&gt; &lt;testResource&gt; &lt;directory&gt;/Users/bifenghui/work/maven_test/src/test/resources&lt;/directory&gt; &lt;/testResource&gt; &lt;/testResources&gt; &lt;directory&gt;/Users/bifenghui/work/maven_test/target&lt;/directory&gt; &lt;finalName&gt;mavenTest-1.0&lt;/finalName&gt; &lt;pluginManagement&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt; &lt;version&gt;1.3&lt;/version&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt; &lt;version&gt;2.2-beta-5&lt;/version&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt; &lt;version&gt;2.8&lt;/version&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-release-plugin&lt;/artifactId&gt; &lt;version&gt;2.3.2&lt;/version&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/pluginManagement&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-clean-plugin&lt;/artifactId&gt; &lt;version&gt;2.5&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;default-clean&lt;/id&gt; &lt;phase&gt;clean&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;clean&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt; &lt;version&gt;2.6&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;default-testResources&lt;/id&gt; &lt;phase&gt;process-test-resources&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;testResources&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;execution&gt; &lt;id&gt;default-resources&lt;/id&gt; &lt;phase&gt;process-resources&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;resources&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt; &lt;version&gt;2.4&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;default-jar&lt;/id&gt; &lt;phase&gt;package&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;jar&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;version&gt;3.1&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;default-compile&lt;/id&gt; &lt;phase&gt;compile&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;compile&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;execution&gt; &lt;id&gt;default-testCompile&lt;/id&gt; &lt;phase&gt;test-compile&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;testCompile&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt; &lt;version&gt;2.12.4&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;default-test&lt;/id&gt; &lt;phase&gt;test&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;test&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt; &lt;version&gt;2.4&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;default-install&lt;/id&gt; &lt;phase&gt;install&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;install&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt; &lt;version&gt;2.7&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;default-deploy&lt;/id&gt; &lt;phase&gt;deploy&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;deploy&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-site-plugin&lt;/artifactId&gt; &lt;version&gt;3.3&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;default-site&lt;/id&gt; &lt;phase&gt;site&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;site&lt;/goal&gt; &lt;/goals&gt; &lt;configuration&gt; &lt;outputDirectory&gt;/Users/bifenghui/work/maven_test/target/site&lt;/outputDirectory&gt; &lt;reportPlugins&gt; &lt;reportPlugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-project-info-reports-plugin&lt;/artifactId&gt; &lt;/reportPlugin&gt; &lt;/reportPlugins&gt; &lt;/configuration&gt; &lt;/execution&gt; &lt;execution&gt; &lt;id&gt;default-deploy&lt;/id&gt; &lt;phase&gt;site-deploy&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;deploy&lt;/goal&gt; &lt;/goals&gt; &lt;configuration&gt; &lt;outputDirectory&gt;/Users/bifenghui/work/maven_test/target/site&lt;/outputDirectory&gt; &lt;reportPlugins&gt; &lt;reportPlugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-project-info-reports-plugin&lt;/artifactId&gt; &lt;/reportPlugin&gt; &lt;/reportPlugins&gt; &lt;/configuration&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;configuration&gt; &lt;outputDirectory&gt;/Users/bifenghui/work/maven_test/target/site&lt;/outputDirectory&gt; &lt;reportPlugins&gt; &lt;reportPlugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-project-info-reports-plugin&lt;/artifactId&gt; &lt;/reportPlugin&gt; &lt;/reportPlugins&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt; &lt;reporting&gt; &lt;outputDirectory&gt;/Users/bifenghui/work/maven_test/target/site&lt;/outputDirectory&gt; &lt;/reporting&gt;&lt;/project&gt; maven生命周期 生命周期 描述 validate 校验pom.xml initialize 初始化 generate-sources 生成编译阶段需要包含的任何源文件 process-sources 处理源代码 generate-resources 生成资源文件 process-resources 处理资源文件 compile 编译源码 process-classes 处理编译生成的文件 test-compile 编译测试源码 process-test-classes 处理测试代码生成的文件 test 执行测试 prepare-package package 按照pom配置打包 pre-integration-test 设置测试环境 integration-test 部署包到测试环境 post-integration-test verify 检查包 install 安装包到本地仓库 deploy 打包到远程仓库，私服等 仓库本地仓库settings.xml 中配置的本地存放包的位置默认如下：123456&lt;!-- localRepository | The path to the local repository maven will use to store artifacts. | | Default: $&#123;user.home&#125;/.m2/repository &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt; --&gt; 中央仓库推荐阿里镜像，速度很快12345&lt;mirror&gt; &lt;id&gt;ali-b1&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;&lt;/mirror&gt; 远程仓库定制的私服（之前个人搭建的私服）12345&lt;mirror&gt; &lt;id&gt;nexus-releases&lt;/id&gt; &lt;mirrorOf&gt;*&lt;/mirrorOf&gt; &lt;url&gt;http://112.74.185.164/nexus/content/groups/public/&lt;/url&gt;&lt;/mirror&gt; 创建maven项目普通项目12345mvn archetype:generate-DgroupId=priv.bifh.coding-DartifactId=mavenTest-DarchetypeArtifactId=maven-archetype-quickstart-DinteractiveMode=false web项目12345mvn archetype:generate-DgroupId=priv.bifh.coding-DartifactId=mavenTestWeb-DarchetypeArtifactId=maven-archetype-webapp-DinteractiveMode=false 自动化构建–todo 2017-03-17 12:54:44 星期五推荐Hunson ，jenkins 依赖管理—todo 2017-03-17 12:51:58 星期五 ## settings.xml123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;!--Licensed to the Apache Software Foundation (ASF) under oneor more contributor license agreements. See the NOTICE filedistributed with this work for additional informationregarding copyright ownership. The ASF licenses this fileto you under the Apache License, Version 2.0 (the\"License\"); you may not use this file except in compliancewith the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing,software distributed under the License is distributed on an\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANYKIND, either express or implied. See the License for thespecific language governing permissions and limitationsunder the License.--&gt;&lt;!-- | This is the configuration file for Maven. It can be specified at two levels: | | 1. User Level. This settings.xml file provides configuration for a single user, | and is normally provided in $&#123;user.home&#125;/.m2/settings.xml. | | NOTE: This location can be overridden with the CLI option: | | -s /path/to/user/settings.xml | | 2. Global Level. This settings.xml file provides configuration for all Maven | users on a machine (assuming they're all using the same Maven | installation). It's normally provided in | $&#123;maven.home&#125;/conf/settings.xml. | | NOTE: This location can be overridden with the CLI option: | | -gs /path/to/global/settings.xml | | The sections in this sample file are intended to give you a running start at | getting the most out of your Maven installation. Where appropriate, the default | values (values used when the setting is not specified) are provided. | |--&gt;&lt;settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\"&gt; &lt;!-- localRepository | The path to the local repository maven will use to store artifacts. | | Default: $&#123;user.home&#125;/.m2/repository &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt; --&gt; &lt;!-- interactiveMode | This will determine whether maven prompts you when it needs input. If set to false, | maven will use a sensible default value, perhaps based on some other setting, for | the parameter in question. | | Default: true &lt;interactiveMode&gt;true&lt;/interactiveMode&gt; --&gt; &lt;!-- offline | Determines whether maven should attempt to connect to the network when executing a build. | This will have an effect on artifact downloads, artifact deployment, and others. | | Default: false &lt;offline&gt;false&lt;/offline&gt; --&gt; &lt;!-- pluginGroups | This is a list of additional group identifiers that will be searched when resolving plugins by their prefix, i.e. | when invoking a command line like \"mvn prefix:goal\". Maven will automatically add the group identifiers | \"org.apache.maven.plugins\" and \"org.codehaus.mojo\" if these are not already contained in the list. |--&gt; &lt;pluginGroups&gt; &lt;!-- pluginGroup | Specifies a further group identifier to use for plugin lookup. &lt;pluginGroup&gt;com.your.plugins&lt;/pluginGroup&gt; --&gt; &lt;/pluginGroups&gt; &lt;!-- proxies | This is a list of proxies which can be used on this machine to connect to the network. | Unless otherwise specified (by system property or command-line switch), the first proxy | specification in this list marked as active will be used. |--&gt; &lt;proxies&gt; &lt;!-- proxy | Specification for one proxy, to be used in connecting to the network. | &lt;proxy&gt; &lt;id&gt;optional&lt;/id&gt; &lt;active&gt;true&lt;/active&gt; &lt;protocol&gt;http&lt;/protocol&gt; &lt;username&gt;proxyuser&lt;/username&gt; &lt;password&gt;proxypass&lt;/password&gt; &lt;host&gt;proxy.host.net&lt;/host&gt; &lt;port&gt;80&lt;/port&gt; &lt;nonProxyHosts&gt;local.net|some.host.com&lt;/nonProxyHosts&gt; &lt;/proxy&gt; --&gt; &lt;/proxies&gt; &lt;!-- servers | This is a list of authentication profiles, keyed by the server-id used within the system. | Authentication profiles can be used whenever maven must make a connection to a remote server. |--&gt; &lt;servers&gt; &lt;!-- server | Specifies the authentication information to use when connecting to a particular server, identified by | a unique name within the system (referred to by the 'id' attribute below). | | NOTE: You should either specify username/password OR privateKey/passphrase, since these pairings are | used together. | &lt;server&gt; &lt;id&gt;deploymentRepo&lt;/id&gt; &lt;username&gt;repouser&lt;/username&gt; &lt;password&gt;repopwd&lt;/password&gt; &lt;/server&gt; --&gt; &lt;!-- Another sample, using keys to authenticate. &lt;server&gt; &lt;id&gt;siteServer&lt;/id&gt; &lt;privateKey&gt;/path/to/private/key&lt;/privateKey&gt; &lt;passphrase&gt;optional; leave empty if not used.&lt;/passphrase&gt; &lt;/server&gt; --&gt; &lt;server&gt; &lt;id&gt;nexus&lt;/id&gt; &lt;username&gt;admin&lt;/username&gt; &lt;password&gt;admin123&lt;/password&gt; &lt;/server&gt; &lt;server&gt; &lt;id&gt;ali-b1&lt;/id&gt; &lt;username&gt;ali&lt;/username&gt; &lt;password&gt;ali&lt;/password&gt; &lt;/server&gt; &lt;server&gt; &lt;id&gt;ali-b2&lt;/id&gt; &lt;username&gt;ali&lt;/username&gt; &lt;password&gt;ali&lt;/password&gt; &lt;/server&gt; &lt;/servers&gt; &lt;!-- mirrors | This is a list of mirrors to be used in downloading artifacts from remote repositories. | | It works like this: a POM may declare a repository to use in resolving certain artifacts. | However, this repository may have problems with heavy traffic at times, so people have mirrored | it to several places. | | That repository definition will have a unique id, so we can create a mirror reference for that | repository, to be used as an alternate download site. The mirror site will be the preferred | server for that repository. |--&gt; &lt;mirrors&gt; &lt;!-- mirror | Specifies a repository mirror site to use instead of a given repository. The repository that | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used | for inheritance and direct lookup purposes, and must be unique across the set of mirrors. | &lt;mirror&gt; &lt;id&gt;mirrorId&lt;/id&gt; &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt; &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt; &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt; &lt;/mirror&gt; --&gt; &lt;mirror&gt; &lt;id&gt;ali-b1&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt; &lt;/mirror&gt; &lt;/mirrors&gt; &lt;!-- profiles | This is a list of profiles which can be activated in a variety of ways, and which can modify | the build process. Profiles provided in the settings.xml are intended to provide local machine- | specific paths and repository locations which allow the build to work in the local environment. | | For example, if you have an integration testing plugin - like cactus - that needs to know where | your Tomcat instance is installed, you can provide a variable here such that the variable is | dereferenced during the build process to configure the cactus plugin. | | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles | section of this document (settings.xml) - will be discussed later. Another way essentially | relies on the detection of a system property, either matching a particular value for the property, | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a | value of '1.4' might activate a profile when the build is executed on a JDK version of '1.4.2_07'. | Finally, the list of active profiles can be specified directly from the command line. | | NOTE: For profiles defined in the settings.xml, you are restricted to specifying only artifact | repositories, plugin repositories, and free-form properties to be used as configuration | variables for plugins in the POM. | |--&gt; &lt;profiles&gt; &lt;!-- profile | Specifies a set of introductions to the build process, to be activated using one or more of the | mechanisms described above. For inheritance purposes, and to activate profiles via &lt;activatedProfiles/&gt; | or the command line, profiles have to have an ID that is unique. | | An encouraged best practice for profile identification is to use a consistent naming convention | for profiles, such as 'env-dev', 'env-test', 'env-production', 'user-jdcasey', 'user-brett', etc. | This will make it more intuitive to understand what the set of introduced profiles is attempting | to accomplish, particularly when you only have a list of profile id's for debug. | | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo. &lt;profile&gt; &lt;id&gt;jdk-1.4&lt;/id&gt; &lt;activation&gt; &lt;jdk&gt;1.4&lt;/jdk&gt; &lt;/activation&gt; &lt;repositories&gt; &lt;repository&gt; &lt;id&gt;jdk14&lt;/id&gt; &lt;name&gt;Repository for JDK 1.4 builds&lt;/name&gt; &lt;url&gt;http://www.myhost.com/maven/jdk14&lt;/url&gt; &lt;layout&gt;default&lt;/layout&gt; &lt;snapshotPolicy&gt;always&lt;/snapshotPolicy&gt; &lt;/repository&gt; &lt;/repositories&gt; &lt;/profile&gt; --&gt; &lt;!-- | Here is another profile, activated by the system property 'target-env' with a value of 'dev', | which provides a specific path to the Tomcat instance. To use this, your plugin configuration | might hypothetically look like: | | ... | &lt;plugin&gt; | &lt;groupId&gt;org.myco.myplugins&lt;/groupId&gt; | &lt;artifactId&gt;myplugin&lt;/artifactId&gt; | | &lt;configuration&gt; | &lt;tomcatLocation&gt;$&#123;tomcatPath&#125;&lt;/tomcatLocation&gt; | &lt;/configuration&gt; | &lt;/plugin&gt; | ... | | NOTE: If you just wanted to inject this configuration whenever someone set 'target-env' to | anything, you could just leave off the &lt;value/&gt; inside the activation-property. | &lt;profile&gt; &lt;id&gt;env-dev&lt;/id&gt; &lt;activation&gt; &lt;property&gt; &lt;name&gt;target-env&lt;/name&gt; &lt;value&gt;dev&lt;/value&gt; &lt;/property&gt; &lt;/activation&gt; &lt;properties&gt; &lt;tomcatPath&gt;/path/to/tomcat/instance&lt;/tomcatPath&gt; &lt;/properties&gt; &lt;/profile&gt; --&gt; &lt;!--此处为原个人私服--&gt; &lt;profile&gt; &lt;id&gt;nexus&lt;/id&gt; &lt;repositories&gt; &lt;repository&gt; &lt;id&gt;nexus&lt;/id&gt; &lt;url&gt;http://112.74.185.164/nexus/content/groups/public/&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/snapshots&gt; &lt;/repository&gt; &lt;/repositories&gt; &lt;pluginRepositories&gt; &lt;pluginRepository&gt; &lt;id&gt;nexus&lt;/id&gt; &lt;url&gt;http://112.74.185.164/nexus/content/groups/public/&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/snapshots&gt; &lt;/pluginRepository&gt; &lt;/pluginRepositories&gt; &lt;/profile&gt; &lt;profile&gt; &lt;id&gt;ali-b1&lt;/id&gt; &lt;repositories&gt; &lt;repository&gt; &lt;id&gt;ali-b1&lt;/id&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;always&lt;/updatePolicy&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;always&lt;/updatePolicy&gt; &lt;/snapshots&gt; &lt;/repository&gt; &lt;/repositories&gt; &lt;pluginRepositories&gt; &lt;pluginRepository&gt; &lt;id&gt;central&lt;/id&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;always&lt;/updatePolicy&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;always&lt;/updatePolicy&gt; &lt;/snapshots&gt; &lt;/pluginRepository&gt; &lt;/pluginRepositories&gt; &lt;/profile&gt; &lt;profile&gt; &lt;id&gt;ali-b2&lt;/id&gt; &lt;repositories&gt; &lt;repository&gt; &lt;id&gt;ali-b2&lt;/id&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/repositories/snapshots/&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;true&lt;/updatePolicy&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;always&lt;/updatePolicy&gt; &lt;/snapshots&gt; &lt;/repository&gt; &lt;/repositories&gt; &lt;pluginRepositories&gt; &lt;pluginRepository&gt; &lt;id&gt;public-snapshots&lt;/id&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/repositories/snapshots/&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;true&lt;/updatePolicy&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;always&lt;/updatePolicy&gt; &lt;/snapshots&gt; &lt;/pluginRepository&gt; &lt;/pluginRepositories&gt; &lt;/profile&gt; &lt;/profiles&gt; &lt;!-- activeProfiles | List of profiles that are active for all builds. | &lt;activeProfiles&gt; &lt;activeProfile&gt;alwaysActiveProfile&lt;/activeProfile&gt; &lt;activeProfile&gt;anotherAlwaysActiveProfile&lt;/activeProfile&gt; &lt;/activeProfiles&gt; --&gt; &lt;activeProfiles&gt; &lt;activeProfile&gt;nexus&lt;/activeProfile&gt; &lt;activeProfile&gt;ali-b1&lt;/activeProfile&gt; &lt;activeProfile&gt;ali-b2&lt;/activeProfile&gt; &lt;/activeProfiles&gt;&lt;/settings&gt;","categories":[{"name":"maven","slug":"maven","permalink":"https://bifenghui.github.io/categories/maven/"}],"tags":[{"name":"maven","slug":"maven","permalink":"https://bifenghui.github.io/tags/maven/"}]},{"title":"回忆与思考","slug":"回忆与思考","date":"2017-03-16T16:48:08.000Z","updated":"2017-03-20T14:34:58.000Z","comments":true,"path":"2017/03/17/回忆与思考/","link":"","permalink":"https://bifenghui.github.io/2017/03/17/回忆与思考/","excerpt":"","text":"","categories":[{"name":"想法","slug":"想法","permalink":"https://bifenghui.github.io/categories/想法/"}],"tags":[{"name":"生活","slug":"生活","permalink":"https://bifenghui.github.io/tags/生活/"}]}]