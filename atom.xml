<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一蓑烟雨任平生</title>
  <subtitle>十年前你是谁，一年前你是谁，甚至昨天你是谁，都不重要。重要的是，今天你是谁，以及明天你将成为谁</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.nightqq.cn/"/>
  <updated>2017-03-27T17:15:13.000Z</updated>
  <id>https://www.nightqq.cn/</id>
  
  <author>
    <name>bifh</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>webStorm ide处理markdown代码空格问题</title>
    <link href="https://www.nightqq.cn/2017/03/28/webStorm-ide%E5%A4%84%E7%90%86markdown%E4%BB%A3%E7%A0%81%E7%A9%BA%E6%A0%BC%E9%97%AE%E9%A2%98/"/>
    <id>https://www.nightqq.cn/2017/03/28/webStorm-ide处理markdown代码空格问题/</id>
    <published>2017-03-27T17:01:43.000Z</published>
    <updated>2017-03-27T17:15:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>#处理代码空格问题<br>markdown编辑器对代码中的空格 进行后置或者前置处理，导致笔记在html展示时代码块出现很多空格，对此种情况在不修改markdown代码模版的情况下，可以利用ide替换所有空行</p>
<ol>
<li>被替换目标：[\n]+</li>
<li>替换目标：\n</li>
<li>勾选 Regex 匹配<br>图示：<br><a href="https://github.com/bifenghui/temp-code/blob/master/markdownDelSpace.png" title="markdownDelSpace" target="_blank" rel="external">markdownDelSpace</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#处理代码空格问题&lt;br&gt;markdown编辑器对代码中的空格 进行后置或者前置处理，导致笔记在html展示时代码块出现很多空格，对此种情况在不修改markdown代码模版的情况下，可以利用ide替换所有空行&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;被替换目标：[\n]+&lt;/li&gt;
&lt;l
    
    </summary>
    
      <category term="markdown" scheme="https://www.nightqq.cn/categories/markdown/"/>
    
    
      <category term="markdown" scheme="https://www.nightqq.cn/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>auth token问题</title>
    <link href="https://www.nightqq.cn/2017/03/28/auth-token%E9%97%AE%E9%A2%98/"/>
    <id>https://www.nightqq.cn/2017/03/28/auth-token问题/</id>
    <published>2017-03-27T16:25:57.000Z</published>
    <updated>2017-03-27T16:25:57.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ssh服务器免密登陆</title>
    <link href="https://www.nightqq.cn/2017/03/27/ssh%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%8D%E5%AF%86%E7%99%BB%E9%99%86/"/>
    <id>https://www.nightqq.cn/2017/03/27/ssh服务器免密登陆/</id>
    <published>2017-03-27T15:34:42.000Z</published>
    <updated>2017-03-27T16:57:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>#ssh 免密码输入</p>
<h2 id="ssh流程"><a href="#ssh流程" class="headerlink" title="ssh流程"></a>ssh流程</h2><p>本地服务器或需要连接远程服务器的服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa</div></pre></td></tr></table></figure></p>
<p>连续三次回车,即在本地生成了公钥和私钥,不设置密码<br>执行scp命令<br>scp ~/.ssh/id_rsa.pub 远程服务器登录名@远程服务器地址:.ssh/id_rsa.pub<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp ~/.ssh/id_rsa.pub 远程服务器登录名@远程服务器地址:.ssh/id_rsa.pub</div></pre></td></tr></table></figure></p>
<p>如果执行报错，可能是权限不够<br>可以执行以下代码先<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh 远程服务器登录名@远程服务器地址 &quot;mkdir .ssh;chmod 0700 .ssh&quot;</div></pre></td></tr></table></figure></p>
<p>连接到远程服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /etc/ssh/sshd_config</div></pre></td></tr></table></figure></p>
<p>查看 AuthorizedKeysFile 的值 ，默认为%h/.ssh/authorized_keys<br>查看 authorized_keys是否存在<br>不存在：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">touch /root/.ssh/authorized_keys</div></pre></td></tr></table></figure></p>
<p>存在继续执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">chmod 600 ~/.ssh/authorized_keys</div><div class="line">cat /root/.ssh/id_rsa.pub  &gt;&gt; /root/.ssh/authorized_keys</div></pre></td></tr></table></figure></p>
<p>上面两条命令的作用分别的是：<br>1 修改文件权限 （文件权限码）<br>2 追加上面scp过来的文件内容到authorized_keys 内容末尾</p>
<h2 id="文件权限码"><a href="#文件权限码" class="headerlink" title="文件权限码"></a>文件权限码</h2><p><a href="https://github.com/bifenghui/temp-code/blob/master/chmodCode.txt" title="文件权限码" target="_blank" rel="external">文件权限码</a></p>
<h2 id="指定私钥文件登陆"><a href="#指定私钥文件登陆" class="headerlink" title="指定私钥文件登陆"></a>指定私钥文件登陆</h2><p>生成密钥对生成不同文件名或者控制多台机器（多台机器不使用同一套密钥对）的情况，需要在登陆的时候指定具体的私钥文件，格式类似<br>scp … -i 私钥文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh 远程服务器登录名@远程服务器地址 -i 私钥文件地址</div></pre></td></tr></table></figure></p>
<p>如果不想指定，可以修改ssh客户端全局/etc/ssh/sshd_config文件或者本地 ~/.ssh/config 文件<br>增加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">IdentityFile 私钥文件地址</div><div class="line">or</div><div class="line">Host 服务器地址</div><div class="line">        IdentityFile 私钥文件地址</div></pre></td></tr></table></figure></p>
<p>注：如果登陆报使用密钥登陆失败，请执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-add   ~/.ssh/私钥文件地址</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#ssh 免密码输入&lt;/p&gt;
&lt;h2 id=&quot;ssh流程&quot;&gt;&lt;a href=&quot;#ssh流程&quot; class=&quot;headerlink&quot; title=&quot;ssh流程&quot;&gt;&lt;/a&gt;ssh流程&lt;/h2&gt;&lt;p&gt;本地服务器或需要连接远程服务器的服务器&lt;br&gt;&lt;figure class=&quot;hi
    
    </summary>
    
      <category term="ssh" scheme="https://www.nightqq.cn/categories/ssh/"/>
    
    
      <category term="ssh" scheme="https://www.nightqq.cn/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>spring 集中式处理异常</title>
    <link href="https://www.nightqq.cn/2017/03/27/spring-%E9%9B%86%E4%B8%AD%E5%BC%8F%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8/"/>
    <id>https://www.nightqq.cn/2017/03/27/spring-集中式处理异常/</id>
    <published>2017-03-27T13:50:17.000Z</published>
    <updated>2017-03-27T16:57:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="spring-集中处理异常"><a href="#spring-集中处理异常" class="headerlink" title="spring 集中处理异常"></a>spring 集中处理异常</h1><h2 id="传统处理"><a href="#传统处理" class="headerlink" title="传统处理"></a>传统处理</h2><p>传统处理异常多通过try-catch进行捕捉，如此的话会出现code不清晰、异常处理很乱的情况，返回给 移动端、web端接口异常不清晰、不友好等问题</p>
<h2 id="spring集中式"><a href="#spring集中式" class="headerlink" title="spring集中式"></a>spring集中式</h2><h3 id="aop"><a href="#aop" class="headerlink" title="aop"></a>aop</h3><p>利用aop对所有控制层即controller层 进行代理，形成类似try-catch式异常捕捉处理</p>
<h3 id="spring提供的异常处理机制"><a href="#spring提供的异常处理机制" class="headerlink" title="spring提供的异常处理机制"></a>spring提供的异常处理机制</h3><p>spring3.2后提供的注解 @ControllerAdvice  @ExceptionHandler注解，实现全局处理异常<br>代码：</p>
<h4 id="自定义异常类DiyException"><a href="#自定义异常类DiyException" class="headerlink" title="自定义异常类DiyException"></a>自定义异常类DiyException</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created with IntelliJ IDEA.</div><div class="line"> * ClassName: com.edianzu.cloud.assets.web.exceptionHandler.DiyException</div><div class="line"> * User: bifenghui</div><div class="line"> * Date: 2017/3/27</div><div class="line"> * Time: 下午10:22</div><div class="line"> * To change this template use File | Settings | File Templates.</div><div class="line"> * Description:</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DiyException</span> <span class="keyword">extends</span> <span class="title">Exception</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</div><div class="line">    <span class="keyword">private</span> Integer exceptionCode ;</div><div class="line">    <span class="keyword">private</span> String exceptionMsg;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DiyException</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DiyException</span><span class="params">(Integer exceptionCode, String exceptionMsg)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.exceptionCode = exceptionCode;</div><div class="line">        <span class="keyword">this</span>.exceptionMsg = exceptionMsg;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DiyException</span><span class="params">(DiyExceptionCode diyExceptionCode)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.exceptionCode = diyExceptionCode.getCode();</div><div class="line">        <span class="keyword">this</span>.exceptionMsg = diyExceptionCode.getMsg();</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getExceptionCode</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> exceptionCode;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setExceptionCode</span><span class="params">(Integer exceptionCode)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.exceptionCode = exceptionCode;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getExceptionMsg</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> exceptionMsg;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setExceptionMsg</span><span class="params">(String exceptionMsg)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.exceptionMsg = exceptionMsg;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="自定义异常枚举返回码"><a href="#自定义异常枚举返回码" class="headerlink" title="自定义异常枚举返回码"></a>自定义异常枚举返回码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created with IntelliJ IDEA.</div><div class="line"> * EnumName: com.edianzu.cloud.assets.web.exceptionHandler.DiyExceptionCode</div><div class="line"> * User: bifenghui@edianzu.cn</div><div class="line"> * Date: 2017/3/27</div><div class="line"> * Time: 下午10:32</div><div class="line"> * To change this template use File | Settings | File Templates.</div><div class="line"> * Description:</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">enum</span> DiyExceptionCode &#123;</div><div class="line">    NOT_KONW_ERROR(<span class="number">9999</span>,<span class="string">"未知错误"</span>);</div><div class="line">    <span class="comment">// <span class="doctag">TODO:</span> 2017/3/27  继续定义多种异常枚举code</span></div><div class="line">    <span class="keyword">private</span> Integer code;</div><div class="line">    <span class="keyword">private</span> String msg;</div><div class="line">    DiyExceptionCode(Integer i, String msg) &#123;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getCode</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> code;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(Integer code)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.code = code;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> msg;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(String msg)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.msg = msg;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="自定义返回简单格式的返回体"><a href="#自定义返回简单格式的返回体" class="headerlink" title="自定义返回简单格式的返回体"></a>自定义返回简单格式的返回体</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created with IntelliJ IDEA.</div><div class="line"> * ClassName: com.edianzu.cloud.assets.web.exceptionHandler.DiyResponse</div><div class="line"> * User: bifenghui</div><div class="line"> * Date: 2017/3/27</div><div class="line"> * Time: 下午10:23</div><div class="line"> * To change this template use File | Settings | File Templates.</div><div class="line"> * Description:</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DiyResponse</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Integer code;</div><div class="line">    <span class="keyword">private</span> T data;</div><div class="line">    <span class="keyword">private</span> String errorMsg;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DiyResponse</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DiyResponse</span><span class="params">(Integer code, T data, String errorMsg)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.code = code;</div><div class="line">        <span class="keyword">this</span>.data = data;</div><div class="line">        <span class="keyword">this</span>.errorMsg = errorMsg;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DiyResponse</span><span class="params">(DiyExceptionCode diyExceptionCode)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.code = diyExceptionCode.getCode();</div><div class="line">        <span class="keyword">this</span>.errorMsg = diyExceptionCode.getMsg();</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getCode</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> code;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(Integer code)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.code = code;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">getData</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> data;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(T data)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.data = data;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getErrorMsg</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> errorMsg;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrorMsg</span><span class="params">(String errorMsg)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.errorMsg = errorMsg;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="处理全局异常的类"><a href="#处理全局异常的类" class="headerlink" title="处理全局异常的类"></a>处理全局异常的类</h4><p>ControllerAdvice 注解类，ExceptionHandler注解异常方法。<br><strong>想法：原理也基于aop代理，后置通知实现，此处需要查看源码或spring工具书进行求证</strong><br><strong>注：此处可以让全局异常类继承 ResponseEntityExceptionHandler 类，查看<br>ResponseEntityExceptionHandler源码可以看到此类中也使@ExceptionHandler注解，且处理了多种异常，最终封装异常信息到ResponseEntity（可以查看ResponseEntity源码追朔到HttpEntity到HttpHeaders）,得到发现返回一个封装的非常的明确的遵循restful接口规范的返回（笔记末尾添上HttpHeaders源码）</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created with IntelliJ IDEA.</div><div class="line"> * ClassName: com.edianzu.cloud.assets.web.exceptionHandler.ExceptionTest</div><div class="line"> * User: bifenghui</div><div class="line"> * Date: 2017/3/27</div><div class="line"> * Time: 下午10:14</div><div class="line"> * To change this template use File | Settings | File Templates.</div><div class="line"> * Description:</div><div class="line"> */</div><div class="line"><span class="meta">@ControllerAdvice</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionTest</span> <span class="keyword">extends</span> <span class="title">ResponseEntityExceptionHandler</span> </span>&#123;</div><div class="line">    <span class="comment">// <span class="doctag">TODO:</span> 2017/3/27 定义全局的异常捕获</span></div><div class="line">    <span class="meta">@ResponseBody</span></div><div class="line">    <span class="meta">@ExceptionHandler</span>(Throwable.class)</div><div class="line">    <span class="function"><span class="keyword">public</span> DiyResponse&lt;String&gt; <span class="title">excuteException</span><span class="params">(Throwable throwable)</span></span>&#123;</div><div class="line">        DiyResponse&lt;String&gt; diyResponse = <span class="keyword">new</span> DiyResponse&lt;&gt;();</div><div class="line">        <span class="comment">// <span class="doctag">TODO:</span> 2017/3/27 假如异常是以及被捕获需要抛出异常</span></div><div class="line">        <span class="keyword">if</span> (throwable <span class="keyword">instanceof</span> DiyException) &#123;</div><div class="line">            DiyException diyException = (DiyException) throwable;</div><div class="line">            diyResponse.setCode(diyException.getExceptionCode());</div><div class="line">            diyResponse.setErrorMsg(diyException.getExceptionMsg());</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// <span class="doctag">TODO:</span> 2017/3/27 此处定义出现未明确标记的异常时需要返回的信息</span></div><div class="line">        <span class="keyword">else</span> &#123;</div><div class="line">            diyResponse = <span class="keyword">new</span> DiyResponse&lt;&gt;(DiyExceptionCode.NOT_KONW_ERROR);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> diyResponse;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="实现实现-HandlerExceptionResolver-接口"><a href="#实现实现-HandlerExceptionResolver-接口" class="headerlink" title="实现实现 HandlerExceptionResolver 接口"></a>实现实现 HandlerExceptionResolver 接口</h3><p>可以定义spring bean 实现HandlerExceptionResolver 来处理全局异常</p>
<p>##HttpHeaders<br><a href="https://github.com/bifenghui/temp-code/blob/master/HttpHeaders.java" title="HttpHeaders.java" target="_blank" rel="external">HttpHeaders.java</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;spring-集中处理异常&quot;&gt;&lt;a href=&quot;#spring-集中处理异常&quot; class=&quot;headerlink&quot; title=&quot;spring 集中处理异常&quot;&gt;&lt;/a&gt;spring 集中处理异常&lt;/h1&gt;&lt;h2 id=&quot;传统处理&quot;&gt;&lt;a href=&quot;#传统处理&quot;
    
    </summary>
    
      <category term="spring" scheme="https://www.nightqq.cn/categories/spring/"/>
    
    
      <category term="spring" scheme="https://www.nightqq.cn/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>每天想对自己说的话</title>
    <link href="https://www.nightqq.cn/2017/03/27/%E6%AF%8F%E5%A4%A9%E6%83%B3%E5%AF%B9%E8%87%AA%E5%B7%B1%E8%AF%B4%E7%9A%84%E8%AF%9D/"/>
    <id>https://www.nightqq.cn/2017/03/27/每天想对自己说的话/</id>
    <published>2017-03-27T13:50:00.000Z</published>
    <updated>2017-03-27T16:57:34.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="相对自己说"><a href="#相对自己说" class="headerlink" title="相对自己说"></a>相对自己说</h3><h4 id="2017-03-27"><a href="#2017-03-27" class="headerlink" title="2017-03-27"></a>2017-03-27</h4><p> 情绪即使一时失落，也不要停下，继续向前走。<br> 不好的情绪不应该留给关心你的身边人，也不要宣泄到其他有所接触的人身上<br> 要学会养神和安静的思考<br> 多读书，给自己加油<br> 学会每天进步</p>
<h4 id="2017-03-28"><a href="#2017-03-28" class="headerlink" title="2017-03-28"></a>2017-03-28</h4><p> 遇到问题一定要搞明白了</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;相对自己说&quot;&gt;&lt;a href=&quot;#相对自己说&quot; class=&quot;headerlink&quot; title=&quot;相对自己说&quot;&gt;&lt;/a&gt;相对自己说&lt;/h3&gt;&lt;h4 id=&quot;2017-03-27&quot;&gt;&lt;a href=&quot;#2017-03-27&quot; class=&quot;headerlink&quot; 
    
    </summary>
    
      <category term="想法" scheme="https://www.nightqq.cn/categories/%E6%83%B3%E6%B3%95/"/>
    
    
      <category term="想法" scheme="https://www.nightqq.cn/tags/%E6%83%B3%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch 启动报错-aliyun</title>
    <link href="https://www.nightqq.cn/2017/03/26/elasticsearch-%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99-aliyun/"/>
    <id>https://www.nightqq.cn/2017/03/26/elasticsearch-启动报错-aliyun/</id>
    <published>2017-03-26T09:19:30.000Z</published>
    <updated>2017-03-27T16:57:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">java.net.UnknownHostException: 阿里云ecs hostname:  阿里云ecs hostname: Name or service not known</div><div class="line">	at java.net.InetAddress.getLocalHost(InetAddress.java:1505)</div><div class="line">...</div><div class="line">Caused by: java.net.UnknownHostException:  阿里云ecs hostname: Name or service not known</div><div class="line">	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)</div><div class="line">	at java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:928)</div><div class="line">	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1323)</div><div class="line">	at java.net.InetAddress.getLocalHost(InetAddress.java:1500)</div><div class="line">	... 29 more</div></pre></td></tr></table></figure>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><h3 id="修改hosts文件"><a href="#修改hosts文件" class="headerlink" title="修改hosts文件"></a>修改hosts文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/hosts</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">127.0.0.1       localhost       阿里云ecs hostname</div><div class="line">127.0.1.1       ******.local.alipay.net      ******</div><div class="line"># The following lines are desirable for IPv6 capable hosts</div><div class="line">::1     localhost ip6-localhost ip6-loopback</div><div class="line">ff02::1 ip6-allnodes</div><div class="line">ff02::2 ip6-allrouters</div></pre></td></tr></table></figure>
<h2 id="再次启动"><a href="#再次启动" class="headerlink" title="再次启动"></a>再次启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sh elasticsearch</div><div class="line">#or</div><div class="line">sh elasticsearch -d</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div c
    
    </summary>
    
      <category term="elasticSearch" scheme="https://www.nightqq.cn/categories/elasticSearch/"/>
    
    
      <category term="elasticSearch" scheme="https://www.nightqq.cn/tags/elasticSearch/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-桥接模式</title>
    <link href="https://www.nightqq.cn/2017/03/24/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.nightqq.cn/2017/03/24/设计模式-桥接模式/</id>
    <published>2017-03-24T04:37:37.000Z</published>
    <updated>2017-03-27T16:57:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h2><h3 id="桥接模式"><a href="#桥接模式" class="headerlink" title="桥接模式"></a>桥接模式</h3><h4 id="意图"><a href="#意图" class="headerlink" title="意图"></a>意图</h4><p>将抽象部分与实现部分分离，使它们都可以独立的变化。</p>
<h4 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h4><p>在有多种可能会变化的情况下，用继承会造成类爆炸问题，扩展起来不灵活。<br><a id="more"></a></p>
<h4 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h4><p>实现系统可能有多个角度分类，每一种角度都可能变化。</p>
<h4 id="如何解决"><a href="#如何解决" class="headerlink" title="如何解决"></a>如何解决</h4><p>把这种多角度分类分离出来，让它们独立变化，减少它们之间耦合。</p>
<h4 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h4><p>抽象类依赖实现类。</p>
<h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ol>
<li>抽象和实现的分离</li>
<li>优秀的扩展能力</li>
<li>实现细节对客户透明<h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4>桥接模式的引入会增加系统的理解与设计难度，由于聚合关联关系建立在抽象层，要求开发者针对抽象进行设计与编程。<br>####使用场景<br>1、如果一个系统需要在构件的抽象化角色和具体化角色之间增加更多的灵活性，避免在两个层次之间建立静态的继承联系，通过桥接模式可以使它们在抽象层建立一个关联关系。<br>2、对于那些不希望使用继承或因为多层次继承导致系统类的个数急剧增加的系统，桥接模式尤为适用。<br>3、一个类存在两个独立变化的维度，且这两个维度都需要进行扩展。<h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4>对于两个独立变化的维度，使用桥接模式再适合不过了。<h4 id="code："><a href="#code：" class="headerlink" title="code："></a>code：</h4>1、桥接实现接口<br>2、具体实现桥接接口的实现类<br>3、关联关系的抽象类<br>4、继承了抽象类的实体类<br>5、使用抽象类和桥接实现接口<br>6、验证输出</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;设计模式&quot;&gt;&lt;a href=&quot;#设计模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式&quot;&gt;&lt;/a&gt;设计模式&lt;/h2&gt;&lt;h3 id=&quot;桥接模式&quot;&gt;&lt;a href=&quot;#桥接模式&quot; class=&quot;headerlink&quot; title=&quot;桥接模式&quot;&gt;&lt;/a&gt;桥接模式&lt;/h3&gt;&lt;h4 id=&quot;意图&quot;&gt;&lt;a href=&quot;#意图&quot; class=&quot;headerlink&quot; title=&quot;意图&quot;&gt;&lt;/a&gt;意图&lt;/h4&gt;&lt;p&gt;将抽象部分与实现部分分离，使它们都可以独立的变化。&lt;/p&gt;
&lt;h4 id=&quot;主要解决&quot;&gt;&lt;a href=&quot;#主要解决&quot; class=&quot;headerlink&quot; title=&quot;主要解决&quot;&gt;&lt;/a&gt;主要解决&lt;/h4&gt;&lt;p&gt;在有多种可能会变化的情况下，用继承会造成类爆炸问题，扩展起来不灵活。&lt;br&gt;
    
    </summary>
    
      <category term="设计模式" scheme="https://www.nightqq.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="https://www.nightqq.cn/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-责任链模式</title>
    <link href="https://www.nightqq.cn/2017/03/23/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.nightqq.cn/2017/03/23/设计模式-责任链模式/</id>
    <published>2017-03-23T04:36:57.000Z</published>
    <updated>2017-03-27T16:57:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><h2 id="责任链模式"><a href="#责任链模式" class="headerlink" title="责任链模式"></a>责任链模式</h2><p>责任链模式（Chain of Responsibility Pattern）为请求创建了一个接收者对象的链。这种模式给予请求的类型，对请求的发送者和接收者进行解耦。这种类型的设计模式属于行为型模式。<br>在这种模式中，通常每个接收者都包含对另一个接收者的引用。如果一个对象不能处理该请求，那么它会把相同的请求传给下一个接收者，依此类推。</p>
<h3 id="意图"><a href="#意图" class="headerlink" title="意图"></a>意图</h3><p>避免请求发送者与接收者耦合在一起，让多个对象都有可能接收请求，将这些对象连接成一条链，并且沿着这条链传递请求，直到有对象处理它为止。</p>
<h3 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h3><p>职责链上的处理者负责处理请求，客户只需要将请求发送到职责链上即可，无须关心请求的处理细节和请求的传递，所以职责链将请求的发送者和请求的处理者解耦了。</p>
<h3 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h3><p>在处理消息的时候以过滤很多道。</p>
<h3 id="如何解决"><a href="#如何解决" class="headerlink" title="如何解决"></a>如何解决</h3><p>拦截的类都实现统一接口。</p>
<h3 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h3><p>Chain 里面聚合它自己，在 excute 里判断是否合适，如果没达到条件则向下传递，向谁传递之前 set 进去。</p>
<h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created with IntelliJ IDEA.</div><div class="line"> * InterfaceName: priv.bifh.design.patterns.chain.Chain</div><div class="line"> * User: bifenghui@edianzu.cn</div><div class="line"> * Date: 2017/3/25</div><div class="line"> * Time: 下午6:26</div><div class="line"> * To change this template use File | Settings | File Templates.</div><div class="line"> * Description:</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Chain</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">excute</span><span class="params">(<span class="keyword">int</span> m)</span></span>;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNextChain</span><span class="params">(Chain chain)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="实现A"><a href="#实现A" class="headerlink" title="实现A"></a>实现A</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created with IntelliJ IDEA.</div><div class="line"> * ClassName: priv.bifh.design.patterns.chain.GetInt</div><div class="line"> * User: bifenghui</div><div class="line"> * Date: 2017/3/25</div><div class="line"> * Time: 下午6:27</div><div class="line"> * To change this template use File | Settings | File Templates.</div><div class="line"> * Description:</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetInt</span> <span class="keyword">implements</span> <span class="title">Chain</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> Chain chain = <span class="keyword">null</span>;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">excute</span><span class="params">(<span class="keyword">int</span> m)</span> </span>&#123;</div><div class="line">        chain.excute(m);</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNextChain</span><span class="params">(Chain chain)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.chain=chain;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="实现B"><a href="#实现B" class="headerlink" title="实现B"></a>实现B</h3><p>/**</p>
<ul>
<li>Created with IntelliJ IDEA.</li>
<li>ClassName: priv.bifh.design.patterns.chain.GetInt</li>
<li>User: bifenghui</li>
<li>Date: 2017/3/25</li>
<li>Time: 下午6:27</li>
<li>To change this template use File | Settings | File Templates.</li>
<li>Description:<br>*/<br>public class GetLong implements Chain {<br> public Chain chain = null;<br> @Override<br> public void excute(int m) {<pre><code>System.out.println(m+100L);
return;
</code></pre> }<br> @Override<br> public void setNextChain(Chain chain) {<pre><code>this.chain=chain;
</code></pre> }<br>}<h3 id="application"><a href="#application" class="headerlink" title="application"></a>application</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created with IntelliJ IDEA.</div><div class="line"> * ClassName: priv.bifh.design.patterns.chain.Application</div><div class="line"> * User: bifenghui</div><div class="line"> * Date: 2017/3/25</div><div class="line"> * Time: 下午6:40</div><div class="line"> * To change this template use File | Settings | File Templates.</div><div class="line"> * Description:</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Chain getInt,getLong;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createChain</span><span class="params">()</span></span>&#123;</div><div class="line">        getInt = <span class="keyword">new</span> GetInt();</div><div class="line">        getLong = <span class="keyword">new</span> GetLong();</div><div class="line">        getInt.setNextChain(getLong);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">goOut</span><span class="params">()</span></span>&#123;</div><div class="line">        getInt.excute(<span class="number">100</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        Application application = <span class="keyword">new</span> Application();</div><div class="line">        application.createChain();</div><div class="line">        application.goOut();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;设计模式&quot;&gt;&lt;a href=&quot;#设计模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式&quot;&gt;&lt;/a&gt;设计模式&lt;/h1&gt;&lt;h2 id=&quot;责任链模式&quot;&gt;&lt;a href=&quot;#责任链模式&quot; class=&quot;headerlink&quot; title=&quot;责任链模式&quot;&gt;
    
    </summary>
    
      <category term="设计模式" scheme="https://www.nightqq.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="https://www.nightqq.cn/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-策略模式</title>
    <link href="https://www.nightqq.cn/2017/03/23/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.nightqq.cn/2017/03/23/设计模式-策略模式/</id>
    <published>2017-03-23T04:36:46.000Z</published>
    <updated>2017-03-27T16:29:09.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="设计模式" scheme="https://www.nightqq.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="https://www.nightqq.cn/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-工厂模式</title>
    <link href="https://www.nightqq.cn/2017/03/23/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.nightqq.cn/2017/03/23/设计模式-工厂模式/</id>
    <published>2017-03-23T04:34:22.000Z</published>
    <updated>2017-03-27T16:29:09.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="设计模式" scheme="https://www.nightqq.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="https://www.nightqq.cn/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-装饰模式</title>
    <link href="https://www.nightqq.cn/2017/03/23/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A3%85%E9%A5%B0%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.nightqq.cn/2017/03/23/设计模式-装饰模式/</id>
    <published>2017-03-23T04:34:17.000Z</published>
    <updated>2017-03-27T16:29:09.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="设计模式" scheme="https://www.nightqq.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="https://www.nightqq.cn/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-适配器模式</title>
    <link href="https://www.nightqq.cn/2017/03/23/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.nightqq.cn/2017/03/23/设计模式-适配器模式/</id>
    <published>2017-03-23T04:34:10.000Z</published>
    <updated>2017-03-27T16:29:09.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="设计模式" scheme="https://www.nightqq.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="https://www.nightqq.cn/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-命令模式</title>
    <link href="https://www.nightqq.cn/2017/03/23/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.nightqq.cn/2017/03/23/设计模式-命令模式/</id>
    <published>2017-03-23T04:33:34.000Z</published>
    <updated>2017-03-27T16:29:09.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="设计模式" scheme="https://www.nightqq.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="https://www.nightqq.cn/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>spring 系列之Spring自定义注解</title>
    <link href="https://www.nightqq.cn/2017/03/21/spring-%E7%B3%BB%E5%88%97%E4%B9%8BSpring%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3/"/>
    <id>https://www.nightqq.cn/2017/03/21/spring-系列之Spring自定义注解/</id>
    <published>2017-03-20T17:33:03.000Z</published>
    <updated>2017-03-27T16:57:34.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="spring" scheme="https://www.nightqq.cn/categories/spring/"/>
    
    
      <category term="spring" scheme="https://www.nightqq.cn/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>搬瓦工服务器购买+ss搭建</title>
    <link href="https://www.nightqq.cn/2017/03/21/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B4%AD%E4%B9%B0-ss%E6%90%AD%E5%BB%BA/"/>
    <id>https://www.nightqq.cn/2017/03/21/搬瓦工服务器购买-ss搭建/</id>
    <published>2017-03-20T17:32:20.000Z</published>
    <updated>2017-03-27T16:57:34.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="搬瓦工ss" scheme="https://www.nightqq.cn/categories/%E6%90%AC%E7%93%A6%E5%B7%A5ss/"/>
    
    
      <category term="搬瓦工ss" scheme="https://www.nightqq.cn/tags/%E6%90%AC%E7%93%A6%E5%B7%A5ss/"/>
    
  </entry>
  
  <entry>
    <title>nexus 私服搭建</title>
    <link href="https://www.nightqq.cn/2017/03/21/nexus-%E7%A7%81%E6%9C%8D%E6%90%AD%E5%BB%BA/"/>
    <id>https://www.nightqq.cn/2017/03/21/nexus-私服搭建/</id>
    <published>2017-03-20T17:30:56.000Z</published>
    <updated>2017-03-27T16:57:34.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="nexus" scheme="https://www.nightqq.cn/categories/nexus/"/>
    
    
      <category term="nexus" scheme="https://www.nightqq.cn/tags/nexus/"/>
    
  </entry>
  
  <entry>
    <title>spring 系列之Spring Boot</title>
    <link href="https://www.nightqq.cn/2017/03/21/spring-%E7%B3%BB%E5%88%97%E4%B9%8BSpring-Boot/"/>
    <id>https://www.nightqq.cn/2017/03/21/spring-系列之Spring-Boot/</id>
    <published>2017-03-20T17:29:14.000Z</published>
    <updated>2017-03-27T16:57:34.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="spring" scheme="https://www.nightqq.cn/categories/spring/"/>
    
    
      <category term="spring" scheme="https://www.nightqq.cn/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>gerrit 代码审核服务器搭建</title>
    <link href="https://www.nightqq.cn/2017/03/21/gerrit-%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%A0%B8%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    <id>https://www.nightqq.cn/2017/03/21/gerrit-代码审核服务器搭建/</id>
    <published>2017-03-20T17:28:30.000Z</published>
    <updated>2017-03-27T16:21:54.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="gerrit" scheme="https://www.nightqq.cn/categories/gerrit/"/>
    
    
      <category term="gerrit" scheme="https://www.nightqq.cn/tags/gerrit/"/>
    
  </entry>
  
  <entry>
    <title>分布式系统设计理念</title>
    <link href="https://www.nightqq.cn/2017/03/21/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%90%86%E5%BF%B5/"/>
    <id>https://www.nightqq.cn/2017/03/21/分布式系统设计理念/</id>
    <published>2017-03-20T17:27:23.000Z</published>
    <updated>2017-03-27T16:57:34.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="分布式" scheme="https://www.nightqq.cn/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="分布式" scheme="https://www.nightqq.cn/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>spring 系列之Spring Security</title>
    <link href="https://www.nightqq.cn/2017/03/21/spring-%E7%B3%BB%E5%88%97%E4%B9%8BSpring-Security/"/>
    <id>https://www.nightqq.cn/2017/03/21/spring-系列之Spring-Security/</id>
    <published>2017-03-20T17:26:30.000Z</published>
    <updated>2017-03-27T16:57:34.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="spring" scheme="https://www.nightqq.cn/categories/spring/"/>
    
    
      <category term="spring" scheme="https://www.nightqq.cn/tags/spring/"/>
    
  </entry>
  
</feed>
